{"version":3,"sources":["component/Screen/Mobile_Robot/ArrayImage.js","component/Screen/Mobile_Robot/Mobile_Robot.js"],"names":["arrImage","src_R","CSC_R","src_S","CSC_S","name","SG1_R","SG1_S","MIX1_R","MIX1_S","SGMIX_R","SGMIX_S","CR1_R","CR1_S","CC2_R","CC2_S","BE2_R","BE2_S","ConcreteMixing","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPanel","state","dataFirebasePanel","length","map","value","key","storeEditPanel","id","editPanel","react_default","a","createElement","Panel","i","width","height","left","top","margin","backgroundColor","padding","borderRadius","boxShadow1","boxShadow2","boxShadow3","boxShadowColor","zIndex","getPanelAdd","PanelAdd","storeAddPanel","getPanelEdit","getLine","dataFirebaseLine","idRun","editLine","split","element","elementRUN","find","x","nameElement","Line","type","getLineAdd","storeAddLine","LineAdd","addLineType","lineLeft","addLineLeft","lineTop","addLineTop","lineLength","addLineLength","getImage","dataFirebaseImage","storeEditImage","editImage","imageView","src","stateElement","Image","url","getImageAdd","storeAddImage","nameImage","ImageAdd","getLabel","dataFirebaseLabel","storeEditLabel","editLabel","Label","text","color","fontSize","getLabelAdd","LabelAdd","storeAddLabel","getLabelEdit","getTextField","dataFirebaseTextField","storeEditTextField","editTextField","TextFieldComponent","tag","label","rows","getTextFieldAdd","TextFieldAdd","storeAddTextField","getTextFieldEdit","getTextFieldInput","dataFirebaseTextFieldInput","storeEditTextFieldInput","editTextFieldInput","TextFieldInputComponent","getTextFieldInputAdd","TextFieldInputAdd","storeAddTextFieldInput","getTextFieldInputEdit","getBitAdjust","dataFirebaseBitAdjust","storeEditBitAdjust","editBitAdjust","parseInt","BitAdjustToggle1","tagTextFieldInput","status","BitAdjustToggle2","BitAdjustToggle3","BitAdjustToggle4","getBitAdjustAdd","storeAddBitAdjust","BitAdjustToggleAdd1","BitAdjustToggleAdd2","BitAdjustToggleAdd3","BitAdjustToggleAdd4","getBitAdjustEdit","getBitDisplay","dataFirebaseBitDisplay","storeEditBitDisplay","editBitDisplay","BitDisplay1","text0","text1","color0","color1","blink0","blink1","image0","arrImageBitDisplay","nameImage0","image1","nameImage1","BitDisplay2","url0","url1","getBitDisplayAdd","storeAddBitDisplay","BitDisplayAdd1","BitDisplayAdd2","getBitDisplayEdit","getWordAdjust","dataFirebaseWordAdjust","storeEditWordAdjust","editWordAdjust","WordAdjust","getWordAdjustAdd","WordAdjustAdd","storeAddWordAdjust","getWordAdjustEdit","getWordDisplay","dataFirebaseWordDisplay","storeEditWordDisplay","editWordDisplay","WordDisplay","divide","getWordDisplayAdd","WordDisplayAdd","storeAddWordDisplay","getWordDisplayEdit","getDWordAdjust","dataFirebaseDWordAdjust","storeEditDWordAdjust","editDWordAdjust","DWordAdjust","getDWordAdjustAdd","DWordAdjustAdd","storeAddDWordAdjust","getDWordAdjustEdit","getDWordDisplay","dataFirebaseDWordDisplay","storeEditDWordDisplay","editDWordDisplay","DWordDisplay","getDWordDisplayAdd","DWordDisplayAdd","storeAddDWordDisplay","getDWordDisplayEdit","getInputWordAdjust","InputWordAdjustClick","wordAdjustClick","statusPLC","_this2","actionGetPermission","actionSetParentScada","GetData","result","setState","resultRun","srcStatus","require","shards_react_es","style","overflow","onClick","backgroundClick","className","backgroundImage","concat","img","position","Tooltip_default","title","parentScada","arrow","alt","indexWordAdjustClick","indexDWordAdjustClick","InputDWordAdjustClick","indexImageClick","ForceElement","addTextField","addTextFieldInput","addPanel","addLine","addImage","addLabel","addWordDisplay","addDWordDisplay","addWordAdjust","addBitAdjust","addBitDisplay","addDWordAdjust","TextFieldFormAdd","TextFieldFormEdit","TextFieldInputFormAdd","TextFieldInputFormEdit","PanelFormAdd","PanelFormEdit","ImageFormAdd","ImageFormEdit","LabelFormAdd","LabelFormEdit","LineFormAdd","LineFormEdit","WordDisplayFormAdd","WordDisplayFormEdit","WordAdjustFormAdd","WordAdjustFormEdit","DWordDisplayFormAdd","DWordDisplayFormEdit","DWordAdjustFormAdd","DWordAdjustFormEdit","BitAdjustFormAdd","BitAdjustFormEdit","BitDisplayFormAdd","BitDisplayFormEdit","Component","connect","ownProps","auth","background","line","image","wordDisplay","wordAdjust","dwordDisplay","dwordAdjust","bitDisplay","bitAdjust","uid","firebase","panel","textField","textFieldInput","dispatch","item"],"mappings":"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","file":"static/js/57.033b6849.chunk.js","sourcesContent":["import CSC_R from '../../../images/CSC_R.gif'\r\nimport CSC_S from '../../../images/CSC_S.gif'\r\nimport SG1_R from '../../../images/SG1_R.gif'\r\nimport SG1_S from '../../../images/SG1_S.gif'\r\nimport MIX1_R from '../../../images/MIX1_R.gif'\r\nimport MIX1_S from '../../../images/MIX1_S.gif'\r\nimport SGMIX_R from '../../../images/SGMIX_R.gif'\r\nimport SGMIX_S from '../../../images/SGMIX_S.gif'\r\nimport CR1_R from '../../../images/CR1_R.gif'\r\nimport CR1_S from '../../../images/CR1_S.gif'\r\nimport CC2_R from '../../../images/CC2_R.gif'\r\nimport CC2_S from '../../../images/CC2_S.gif'\r\nimport BE2_R from '../../../images/BE2_R.gif'\r\nimport BE2_S from '../../../images/BE2_S.gif'\r\nexport const arrImage  = [\r\n    {\r\n        src_R: CSC_R,\r\n        src_S: CSC_S,\r\n        name: 'CSC'\r\n    },\r\n    {\r\n        src_R: SG1_R,\r\n        src_S: SG1_S,\r\n        name: 'SG1'\r\n    },\r\n    {\r\n        src_R: MIX1_R,\r\n        src_S: MIX1_S,\r\n        name: 'MIX1'\r\n    },\r\n    {\r\n        src_R: SGMIX_R,\r\n        src_S: SGMIX_S,\r\n        name: 'SGMIX'\r\n    },\r\n    {\r\n        src_R: CR1_R,\r\n        src_S: CR1_S,\r\n        name: 'CR1'\r\n    },\r\n    {\r\n        src_R: CC2_R,\r\n        src_S: CC2_S,\r\n        name: 'CC2'\r\n    },\r\n    {\r\n        src_R: BE2_R,\r\n        src_S: BE2_S,\r\n        name: 'BE2'\r\n    }\r\n];\r\n  \r\n  export default arrImage","//HoChiMinh_Viper\r\n\r\nimport React, { Component } from 'react'\r\nimport { Col, Row } from 'shards-react';\r\nimport { connect } from 'react-redux';\r\nimport { actionSetParentScada } from '../../../redux/actions/elementAction'\r\nimport { actionGetPermission } from '../../../redux/actions/authAction'\r\nimport ImageFormAdd from '../../layout/image/ImageFormAdd';\r\nimport ImageFormEdit from '../../layout/image/ImageFormEdit';\r\nimport LabelFormAdd from '../../layout/label/LabelFormAdd';\r\nimport LabelFormEdit from '../../layout/label/LabelFormEdit';\r\nimport img from '../../../images/empty.png'\r\nimport Image from '../../layout/image/Image';\r\nimport ImageAdd from '../../layout/image/ImageAdd';\r\nimport Label from '../../layout/label/Label';\r\nimport LabelAdd from '../../layout/label/LabelAdd';\r\nimport Line from '../../layout/line/Line';\r\nimport ForceElement from '../../layout/ForceElement';\r\nimport InputWordAdjustClick from '../../ScadaComponent/InputWordAdjustClick';\r\nimport InputDWordAdjustClick from '../../ScadaComponent/InputDWordAdjustClick';\r\nimport { backgroundClick } from '../../../redux/actions/backgroundAction'\r\nimport LineAdd from '../../layout/line/LineAdd';\r\nimport LineFormAdd from '../../layout/line/LineFormAdd'\r\nimport * as GetData from '../../layout/GetData/FirebaseGetData';\r\nimport LineFormEdit from '../../layout/line/LineFormEdit';\r\nimport arrImage from './ArrayImage';\r\nimport WordDisplay from '../../ScadaComponent/WordDisplay/WordDisplay'\r\nimport DWordDisplay from '../../ScadaComponent/DWordDisplay/DWordDisplay'\r\nimport WordAdjust from '../../ScadaComponent/WordAdjust/WordAdjust'\r\nimport DWordAdjust from '../../ScadaComponent/DWordAdjust/DWordAdjust'\r\nimport BitDisplayFormAdd from '../../ScadaComponent/BitDisplay/BitDisplayFormAdd'\r\nimport WordDisplayFormAdd from '../../ScadaComponent/WordDisplay/WordDisplayFormAdd'\r\nimport DWordDisplayFormAdd from '../../ScadaComponent/DWordDisplay/DWordDisplayFormAdd'\r\nimport WordAdjustFormAdd from '../../ScadaComponent/WordAdjust/WordAdjustFormAdd'\r\nimport BitAdjustFormAdd from '../../ScadaComponent/BitAdjust/BitAdjustFormAdd'\r\nimport DWordAdjustFormAdd from '../../ScadaComponent/DWordAdjust/DWordAdjustFormAdd'\r\nimport WordDisplayAdd from '../../ScadaComponent/WordDisplay/WordDisplayAdd'\r\nimport DWordDisplayAdd from '../../ScadaComponent/DWordDisplay/DWordDisplayAdd'\r\nimport WordAdjustAdd from '../../ScadaComponent/WordAdjust/WordAdjustAdd'\r\nimport DWordAdjustAdd from '../../ScadaComponent/DWordAdjust/DWordAdjustAdd'\r\nimport BitDisplayFormEdit from '../../ScadaComponent/BitDisplay/BitDisplayFormEdit'\r\nimport WordDisplayFormEdit from '../../ScadaComponent/WordDisplay/WordDisplayFormEdit'\r\nimport DWordDisplayFormEdit from '../../ScadaComponent/DWordDisplay/DWordDisplayFormEdit'\r\nimport WordAdjustFormEdit from '../../ScadaComponent/WordAdjust/WordAdjustFormEdit'\r\nimport BitAdjustFormEdit from '../../ScadaComponent/BitAdjust/BitAdjustFormEdit'\r\nimport DWordAdjustFormEdit from '../../ScadaComponent/DWordAdjust/DWordAdjustFormEdit'\r\nimport BitAdjustToggle1 from '../../ScadaComponent/BitAdjust/BitAdjustToggle1';\r\nimport BitAdjustToggleAdd1 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd1'\r\nimport BitAdjustToggle2 from '../../ScadaComponent/BitAdjust/BitAdjustToggle2';\r\nimport BitAdjustToggleAdd2 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd2'\r\nimport BitAdjustToggle3 from '../../ScadaComponent/BitAdjust/BitAdjustToggle3';\r\nimport BitAdjustToggleAdd3 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd3'\r\nimport BitAdjustToggle4 from '../../ScadaComponent/BitAdjust/BitAdjustToggle4';\r\nimport BitAdjustToggleAdd4 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd4'\r\nimport arrImageBitDisplay from '../../ScadaComponent/ArrayImageBitDisplay'\r\nimport BitDisplay1 from '../../ScadaComponent/BitDisplay/BitDisplay1';\r\nimport BitDisplay2 from '../../ScadaComponent/BitDisplay/BitDisplay2';\r\nimport BitDisplayAdd1 from '../../ScadaComponent/BitDisplay/BitDisplayAdd1'\r\nimport BitDisplayAdd2 from '../../ScadaComponent/BitDisplay/BitDisplayAdd2'\r\nimport Panel from '../../ScadaComponent/Panel/Panel'\r\nimport PanelAdd from '../../ScadaComponent/Panel/PanelAdd'\r\nimport PanelFormAdd from '../../ScadaComponent/Panel/PanelFormAdd'\r\nimport PanelFormEdit from '../../ScadaComponent/Panel/PanelFormEdit'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TextFieldAdd from '../../layout/textField/TextFieldAdd';\r\nimport TextFieldFormAdd from '../../layout/textField/TextFieldFormAdd';\r\nimport TextFieldFormEdit from '../../layout/textField/TextFieldFormEdit';\r\nimport TextFieldComponent from '../../layout/textField/TextFieldComponent';\r\nimport TextFieldInputAdd from '../../layout/textFieldInput/TextFieldInputAdd';\r\nimport TextFieldInputFormAdd from '../../layout/textFieldInput/TextFieldInputFormAdd';\r\nimport TextFieldInputFormEdit from '../../layout/textFieldInput/TextFieldInputFormEdit';\r\nimport TextFieldInputComponent from '../../layout/textFieldInput/TextFieldInputComponent';\r\nvar IdPage = 'BTC_MobileRobot'\r\n\r\nclass ConcreteMixing extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            elementRUN: [],\r\n            dataFirebaseImage: [],\r\n            dataFirebaseLabel: [],\r\n            dataFirebaseLine: [],\r\n            dataFirebaseWordDisplay: [],\r\n            dataFirebaseDWordDisplay: [],\r\n            dataFirebaseWordAdjust: [],\r\n            dataFirebaseBitAdjust: [],\r\n            dataFirebaseDWordAdjust: [],\r\n            dataFirebaseBitDisplay: [],\r\n            dataFirebasePanel: [],\r\n            dataFirebaseTextField: [],\r\n            dataFirebaseTextFieldInput: [],\r\n            statusPLC: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.props.actionGetPermission(IdPage)\r\n        this.props.actionSetParentScada(IdPage)\r\n        GetData.GetStatusPLCImage((result) => {\r\n            this.setState({\r\n                statusPLC: result\r\n            })\r\n        })\r\n        GetData.GetImage((result, resultRun) => {\r\n            this.setState({\r\n                dataFirebaseImage: result,\r\n                elementRUN: resultRun\r\n            })\r\n        });\r\n        GetData.GetPanel((result) => {\r\n            this.setState({\r\n                dataFirebasePanel: result\r\n            })\r\n        })\r\n        GetData.GetTextField((result) => {\r\n            this.setState({\r\n                dataFirebaseTextField: result\r\n            })\r\n        })\r\n        GetData.GetTextFieldInput((result) => {\r\n            this.setState({\r\n                dataFirebaseTextFieldInput: result\r\n            })\r\n        })\r\n        GetData.GetLabel((result) => {\r\n            this.setState({\r\n                dataFirebaseLabel: result\r\n            })\r\n        })\r\n        GetData.GetLineData((result) => {\r\n            this.setState({\r\n                dataFirebaseLine: result\r\n            })\r\n        })\r\n        GetData.GetBitDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseBitDisplay: result\r\n            })\r\n        })\r\n        GetData.GetWordDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseWordDisplay: result\r\n            })\r\n        })\r\n        GetData.GetWordAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseWordAdjust: result\r\n            })\r\n        })\r\n        GetData.GetBitAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseBitAdjust: result\r\n            })\r\n        })\r\n        GetData.GetDWordAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseDWordAdjust: result\r\n            })\r\n        })\r\n        GetData.GetDWordDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseDWordDisplay: result\r\n            })\r\n        })\r\n    }\r\n    getPanel = () => {\r\n        if (this.state.dataFirebasePanel.length > 0) {\r\n            return this.state.dataFirebasePanel.map((value, key) => {\r\n                if (value.key === this.props.storeEditPanel.id && this.props.editPanel) return ''\r\n                if (value.key !== this.props.storeEditPanel.id || !this.props.editPanel) {\r\n                    return (\r\n                        <Panel\r\n                            key={key}\r\n                            i={value.key}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            margin={value.margin}\r\n                            backgroundColor={value.backgroundColor}\r\n                            padding={value.padding}\r\n                            borderRadius={value.borderRadius}\r\n                            boxShadow1={value.boxShadow1}\r\n                            boxShadow2={value.boxShadow2}\r\n                            boxShadow3={value.boxShadow3}\r\n                            boxShadowColor={value.boxShadowColor}\r\n                            zIndex={value.zIndex}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getPanelAdd = () => {\r\n        return (\r\n            <PanelAdd\r\n                width={this.props.storeAddPanel.width}\r\n                height={this.props.storeAddPanel.height}\r\n                left={this.props.storeAddPanel.left}\r\n                top={this.props.storeAddPanel.top}\r\n                margin={this.props.storeAddPanel.margin}\r\n                backgroundColor={this.props.storeAddPanel.backgroundColor}\r\n                padding={this.props.storeAddPanel.padding}\r\n                borderRadius={this.props.storeAddPanel.borderRadius}\r\n                boxShadow1={this.props.storeAddPanel.boxShadow1}\r\n                boxShadow2={this.props.storeAddPanel.boxShadow2}\r\n                boxShadow3={this.props.storeAddPanel.boxShadow3}\r\n                boxShadowColor={this.props.storeAddPanel.boxShadowColor}\r\n                zIndex={this.props.storeAddPanel.zIndex}\r\n            />\r\n        )\r\n    }\r\n    getPanelEdit = () => {\r\n        if (this.props.storeEditPanel.id !== '') {\r\n            return (\r\n                <PanelAdd\r\n                    width={this.props.storeEditPanel.width}\r\n                    height={this.props.storeEditPanel.height}\r\n                    left={this.props.storeEditPanel.left}\r\n                    top={this.props.storeEditPanel.top}\r\n                    margin={this.props.storeEditPanel.margin}\r\n                    backgroundColor={this.props.storeEditPanel.backgroundColor}\r\n                    padding={this.props.storeEditPanel.padding}\r\n                    borderRadius={this.props.storeEditPanel.borderRadius}\r\n                    boxShadow1={this.props.storeEditPanel.boxShadow1}\r\n                    boxShadow2={this.props.storeEditPanel.boxShadow2}\r\n                    boxShadow3={this.props.storeEditPanel.boxShadow3}\r\n                    boxShadowColor={this.props.storeEditPanel.boxShadowColor}\r\n                    zIndex={this.props.storeEditPanel.zIndex}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    getLine = () => {\r\n        if (this.state.dataFirebaseLine.length > 0) {\r\n            return this.state.dataFirebaseLine.map((value, key) => {\r\n                if (value.idRun && value.idRun && !this.props.editLine) {\r\n                    let arrRun = value.idRun.split('_');\r\n                    return (arrRun.map((element, key) => {\r\n                        let ElementRun = this.state.elementRUN.find(x => x.nameElement === element)\r\n                        if (ElementRun) {\r\n                            return (\r\n                                <Line\r\n                                    key={key}\r\n                                    i={value.key}\r\n                                    type={value.type}\r\n                                    idRun={value.idRun}\r\n                                    length={value.length}\r\n                                    left={value.left}\r\n                                    top={value.top}\r\n                                />\r\n                            )\r\n                        }\r\n                        return null\r\n                    }))\r\n                } else {\r\n                    if (this.props.editLine)\r\n                        return (\r\n                            <Line\r\n                                key={key}\r\n                                i={value.key}\r\n                                type={value.type}\r\n                                idRun={value.idRun}\r\n                                length={value.length}\r\n                                left={value.left}\r\n                                top={value.top}\r\n                            />\r\n                        )\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n    getLineAdd = () => {\r\n        if (this.props.storeAddLine.length > 0) {\r\n            return this.props.storeAddLine.map((value, key) => {\r\n                return (\r\n                    <LineAdd\r\n                        key={key}\r\n                        type={value.addLineType}\r\n                        lineLeft={value.addLineLeft}\r\n                        lineTop={value.addLineTop}\r\n                        lineLength={value.addLineLength}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n    //IMAGE\r\n    getImage = () => {\r\n        if (this.state.dataFirebaseImage.length > 0) {\r\n            return this.state.dataFirebaseImage.map((value, key) => {\r\n                if (value.key === this.props.storeEditImage.id && this.props.editImage) return ''\r\n                if (value.key !== this.props.storeEditImage.id || !this.props.editImage) {\r\n                    const imageView = arrImage.find(x => x.name === value.src)\r\n                    var src = '';\r\n                    if (value.stateElement === 1) src = imageView.src_R;\r\n                    if (value.stateElement === 0) src = imageView.src_S;\r\n                    return (\r\n                        <Image\r\n                            key={key}\r\n                            i={value.key}\r\n                            url={src}\r\n                            src={value.src}\r\n                            top={value.top}\r\n                            left={value.left}\r\n                            nameElement={value.nameElement}\r\n                            stateElement={value.stateElement}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getImageAdd = () => {\r\n        const imageView = arrImage.find(x => x.name === this.props.storeAddImage.nameImage)\r\n        var src = '';\r\n        if (imageView) {\r\n            if (this.props.storeAddImage.state === 1) src = imageView.src_R;\r\n            if (this.props.storeAddImage.state === 0) src = imageView.src_S;\r\n            return (\r\n                <ImageAdd\r\n                    url={src}\r\n                    top={this.props.storeAddImage.top}\r\n                    left={this.props.storeAddImage.left}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //LABEL\r\n    getLabel = () => {\r\n        if (this.state.dataFirebaseLabel.length > 0) {\r\n            return this.state.dataFirebaseLabel.map((value, key) => {\r\n                if (value.key === this.props.storeEditLabel.id && this.props.editLabel) return ''\r\n                if (value.key !== this.props.storeEditLabel.id || !this.props.editLabel) {\r\n                    return (\r\n                        <Label\r\n                            key={key}\r\n                            i={value.key}\r\n                            text={value.text}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            top={value.top}\r\n                            left={value.left} />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getLabelAdd = () => {\r\n        return (\r\n            <LabelAdd\r\n                text={this.props.storeAddLabel.text}\r\n                top={this.props.storeAddLabel.top}\r\n                left={this.props.storeAddLabel.left}\r\n                color={this.props.storeAddLabel.color}\r\n                fontSize={this.props.storeAddLabel.fontSize}\r\n                width={this.props.storeAddLabel.width}\r\n            />\r\n        )\r\n    }\r\n    getLabelEdit = () => {\r\n        if (this.props.storeEditLabel.id !== \"\") {\r\n            return (\r\n                <LabelAdd\r\n                    text={this.props.storeEditLabel.text}\r\n                    top={this.props.storeEditLabel.top}\r\n                    left={this.props.storeEditLabel.left}\r\n                    color={this.props.storeEditLabel.color}\r\n                    fontSize={this.props.storeEditLabel.fontSize}\r\n                    width={this.props.storeEditLabel.width}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    //TEXT FIELD\r\n    getTextField = () => {\r\n        if (this.state.dataFirebaseTextField.length > 0) {\r\n            return this.state.dataFirebaseTextField.map((value, key) => {\r\n                if (value.key === this.props.storeEditTextField.id && this.props.editTextField) return ''\r\n                if (value.key !== this.props.storeEditTextField.id || !this.props.editTextField) {\r\n                    return (\r\n                        <TextFieldComponent\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            label={value.label}\r\n                            value={value.value}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            width={value.width}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            rows={value.rows}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getTextFieldAdd = () => {\r\n        return (\r\n            <TextFieldAdd\r\n                tag={this.props.storeAddTextField.tag}\r\n                label={this.props.storeAddTextField.label}\r\n                value={this.props.storeAddTextField.value}\r\n                left={this.props.storeAddTextField.left}\r\n                top={this.props.storeAddTextField.top}\r\n                width={this.props.storeAddTextField.width}\r\n                color={this.props.storeAddTextField.color}\r\n                fontSize={this.props.storeAddTextField.fontSize}\r\n                rows={this.props.storeAddTextField.rows}\r\n            />\r\n        )\r\n    }\r\n    getTextFieldEdit = () => {\r\n        if (this.props.storeEditTextField.id !== \"\") {\r\n            return (\r\n                <TextFieldAdd\r\n                    tag={this.props.storeEditTextField.tag}\r\n                    label={this.props.storeEditTextField.label}\r\n                    value={this.props.storeEditTextField.value}\r\n                    left={this.props.storeEditTextField.left}\r\n                    top={this.props.storeEditTextField.top}\r\n                    width={this.props.storeEditTextField.width}\r\n                    color={this.props.storeEditTextField.color}\r\n                    fontSize={this.props.storeEditTextField.fontSize}\r\n                    rows={this.props.storeEditTextField.rows}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    //TEXT FIELD INPUT\r\n    getTextFieldInput = () => {\r\n        if (this.state.dataFirebaseTextFieldInput.length > 0) {\r\n            return this.state.dataFirebaseTextFieldInput.map((value, key) => {\r\n                if (value.key === this.props.storeEditTextFieldInput.id && this.props.editTextFieldInput) return ''\r\n                if (value.key !== this.props.storeEditTextFieldInput.id || !this.props.editTextFieldInput) {\r\n                    return (\r\n                        <TextFieldInputComponent\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            label={value.label}\r\n                            value={value.value}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            width={value.width}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            rows={value.rows}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getTextFieldInputAdd = () => {\r\n        return (\r\n            <TextFieldInputAdd\r\n                tag={this.props.storeAddTextFieldInput.tag}\r\n                label={this.props.storeAddTextFieldInput.label}\r\n                value={this.props.storeAddTextFieldInput.value}\r\n                left={this.props.storeAddTextFieldInput.left}\r\n                top={this.props.storeAddTextFieldInput.top}\r\n                width={this.props.storeAddTextFieldInput.width}\r\n                color={this.props.storeAddTextFieldInput.color}\r\n                fontSize={this.props.storeAddTextFieldInput.fontSize}\r\n                rows={this.props.storeAddTextFieldInput.rows}\r\n            />\r\n        )\r\n    }\r\n    getTextFieldInputEdit = () => {\r\n        if (this.props.storeEditTextFieldInput.id !== \"\") {\r\n            return (\r\n                <TextFieldInputAdd\r\n                    tag={this.props.storeEditTextFieldInput.tag}\r\n                    label={this.props.storeEditTextFieldInput.label}\r\n                    value={this.props.storeEditTextFieldInput.value}\r\n                    left={this.props.storeEditTextFieldInput.left}\r\n                    top={this.props.storeEditTextFieldInput.top}\r\n                    width={this.props.storeEditTextFieldInput.width}\r\n                    color={this.props.storeEditTextFieldInput.color}\r\n                    fontSize={this.props.storeEditTextFieldInput.fontSize}\r\n                    rows={this.props.storeEditTextFieldInput.rows}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //BIT ADJUST\r\n    getBitAdjust = () => {\r\n        if (this.state.dataFirebaseBitAdjust.length > 0) {\r\n            return this.state.dataFirebaseBitAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditBitAdjust.id && this.props.editBitAdjust) return '';\r\n                if (value.key !== this.props.storeEditBitAdjust.id || !this.props.editBitAdjust) {\r\n                    if (parseInt(value.type) === 1) {\r\n                        return (<BitAdjustToggle1\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 2) {\r\n                        return (<BitAdjustToggle2\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 3) {\r\n                        return (<BitAdjustToggle3\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 4) {\r\n                        return (<BitAdjustToggle4\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    return (<BitAdjustToggle1\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text='NotMatchType'\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                        type={value.type}\r\n                        status={value.status}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getBitAdjustAdd = () => {\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 1) {\r\n            return (\r\n                <BitAdjustToggleAdd1\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 2) {\r\n            return (\r\n                <BitAdjustToggleAdd2\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 3) {\r\n            return (\r\n                <BitAdjustToggleAdd3\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 4) {\r\n            return (\r\n                <BitAdjustToggleAdd4\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    getBitAdjustEdit = () => {\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 1) {\r\n            return (\r\n                <BitAdjustToggleAdd1\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 2) {\r\n            return (\r\n                <BitAdjustToggleAdd2\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 3) {\r\n            return (\r\n                <BitAdjustToggleAdd3\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 4) {\r\n            return (\r\n                <BitAdjustToggleAdd4\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //BITDISPLAY\r\n    getBitDisplay = () => {\r\n        if (this.state.dataFirebaseBitDisplay.length > 0) {\r\n            return this.state.dataFirebaseBitDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditBitDisplay.id && this.props.editBitDisplay) return ''\r\n                if (value.key !== this.props.storeEditBitDisplay.id || !this.props.editBitDisplay) {\r\n                    if (parseInt(value.type) === 1) {\r\n                        return (<BitDisplay1\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text0={value.text0}\r\n                            text1={value.text1}\r\n                            color0={value.color0}\r\n                            color1={value.color1}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                            blink0={value.blink0}\r\n                            blink1={value.blink1}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 2) {\r\n                        const image0 = arrImageBitDisplay.find(x => x.name === value.nameImage0)\r\n                        const image1 = arrImageBitDisplay.find(x => x.name === value.nameImage1)\r\n                        if (image0 || image1) {\r\n                            return (<BitDisplay2\r\n                                key={key}\r\n                                i={value.key}\r\n                                tag={value.tag}\r\n                                left={value.left}\r\n                                top={value.top}\r\n                                url0={image0 ? image0.src : null}\r\n                                url1={image1 ? image1.src : null}\r\n                                nameImage0={value.nameImage0}\r\n                                nameImage1={value.nameImage1}\r\n                                width={value.width}\r\n                                status={value.status}\r\n                                type={value.type}\r\n                                fontSize={value.fontSize}\r\n                                text0={value.text0}\r\n                                text1={value.text1}\r\n                                color0={value.color0}\r\n                                color1={value.color1}\r\n                                blink0={value.blink0}\r\n                                blink1={value.blink1}\r\n                            />)\r\n                        }\r\n\r\n                    }\r\n                    return (<BitDisplay1\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text0='NotMatchType'\r\n                        text1='NotMatchType'\r\n                        color0={value.color0}\r\n                        color1={value.color1}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        type={value.type}\r\n                        status={value.status}\r\n                        blink0={value.blink0}\r\n                        blink1={value.blink1}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getBitDisplayAdd = () => {\r\n        if (parseInt(this.props.storeAddBitDisplay.type) === 1) {\r\n            return (\r\n                <BitDisplayAdd1\r\n                    width={this.props.storeAddBitDisplay.width}\r\n                    fontSize={this.props.storeAddBitDisplay.fontSize}\r\n                    top={this.props.storeAddBitDisplay.top}\r\n                    left={this.props.storeAddBitDisplay.left}\r\n                    text0={this.props.storeAddBitDisplay.text0}\r\n                    text1={this.props.storeAddBitDisplay.text1}\r\n                    color0={this.props.storeAddBitDisplay.color0}\r\n                    color1={this.props.storeAddBitDisplay.color1}\r\n                    type={this.props.storeAddBitDisplay.type}\r\n                    tag={this.props.storeAddBitDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitDisplay.type) === 2) {\r\n            const image0 = arrImageBitDisplay.find(x => x.name === this.props.storeAddBitDisplay.nameImage0)\r\n            const image1 = arrImageBitDisplay.find(x => x.name === this.props.storeAddBitDisplay.nameImage1)\r\n            if (image0 || image1) {\r\n                return (\r\n                    <BitDisplayAdd2\r\n                        url0={image0 ? image0.src : ''}\r\n                        url1={image1 ? image1.src : ''}\r\n                        top={this.props.storeAddBitDisplay.top}\r\n                        left={this.props.storeAddBitDisplay.left}\r\n                        width={this.props.storeAddBitDisplay.width}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    getBitDisplayEdit = () => {\r\n        if (parseInt(this.props.storeEditBitDisplay.type) === 1) {\r\n            return (\r\n                <BitDisplayAdd1\r\n                    width={this.props.storeEditBitDisplay.width}\r\n                    fontSize={this.props.storeEditBitDisplay.fontSize}\r\n                    top={this.props.storeEditBitDisplay.top}\r\n                    left={this.props.storeEditBitDisplay.left}\r\n                    text0={this.props.storeEditBitDisplay.text0}\r\n                    text1={this.props.storeEditBitDisplay.text1}\r\n                    color0={this.props.storeEditBitDisplay.color0}\r\n                    color1={this.props.storeEditBitDisplay.color1}\r\n                    type={this.props.storeEditBitDisplay.type}\r\n                    tag={this.props.storeEditBitDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitDisplay.type) === 2) {\r\n            const image0 = arrImageBitDisplay.find(x => x.name === this.props.storeEditBitDisplay.nameImage0)\r\n            const image1 = arrImageBitDisplay.find(x => x.name === this.props.storeEditBitDisplay.nameImage1)\r\n            if (image0 || image1) {\r\n                return (\r\n                    <BitDisplayAdd2\r\n                        url0={image0 ? image0.src : ''}\r\n                        url1={image1 ? image1.src : ''}\r\n                        top={this.props.storeEditBitDisplay.top}\r\n                        left={this.props.storeEditBitDisplay.left}\r\n                        width={this.props.storeEditBitDisplay.width}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    //WORDADJUST\r\n    getWordAdjust = () => {\r\n        if (this.state.dataFirebaseWordAdjust.length > 0) {\r\n            return this.state.dataFirebaseWordAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditWordAdjust.id && this.props.editWordAdjust) return ''\r\n                if (value.key !== this.props.storeEditWordAdjust.id || !this.props.editWordAdjust) {\r\n                    return (<WordAdjust\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getWordAdjustAdd = () => {\r\n        return (\r\n            <WordAdjustAdd\r\n                width={this.props.storeAddWordAdjust.width}\r\n                height={this.props.storeAddWordAdjust.height}\r\n                fontSize={this.props.storeAddWordAdjust.fontSize}\r\n                top={this.props.storeAddWordAdjust.top}\r\n                left={this.props.storeAddWordAdjust.left}\r\n                text={this.props.storeAddWordAdjust.text}\r\n                tag={this.props.storeAddWordAdjust.tag}\r\n            />\r\n        )\r\n    }\r\n    getWordAdjustEdit = () => {\r\n        if (this.props.storeEditWordAdjust.id !== \"\") {\r\n            return (\r\n                <WordAdjustAdd\r\n                    width={this.props.storeEditWordAdjust.width}\r\n                    height={this.props.storeEditWordAdjust.height}\r\n                    fontSize={this.props.storeEditWordAdjust.fontSize}\r\n                    top={this.props.storeEditWordAdjust.top}\r\n                    left={this.props.storeEditWordAdjust.left}\r\n                    text={this.props.storeEditWordAdjust.text}\r\n                    tag={this.props.storeEditWordAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //WORDDISPLAY\r\n    getWordDisplay = () => {\r\n        if (this.state.dataFirebaseWordDisplay.length > 0) {\r\n            return this.state.dataFirebaseWordDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditWordDisplay.id && this.props.editWordDisplay) return ''\r\n                if (value.key !== this.props.storeEditWordDisplay.id || !this.props.editWordDisplay) {\r\n                    return (<WordDisplay\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        divide={value.divide}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getWordDisplayAdd = () => {\r\n        return (\r\n            <WordDisplayAdd\r\n                width={this.props.storeAddWordDisplay.width}\r\n                fontSize={this.props.storeAddWordDisplay.fontSize}\r\n                top={this.props.storeAddWordDisplay.top}\r\n                left={this.props.storeAddWordDisplay.left}\r\n                text={this.props.storeAddWordDisplay.text}\r\n                tag={this.props.storeAddWordDisplay.tag}\r\n            />\r\n        )\r\n    }\r\n    getWordDisplayEdit = () => {\r\n        if (this.props.storeEditWordDisplay.id !== \"\") {\r\n            return (\r\n                <WordDisplayAdd\r\n                    width={this.props.storeEditWordDisplay.width}\r\n                    fontSize={this.props.storeEditWordDisplay.fontSize}\r\n                    top={this.props.storeEditWordDisplay.top}\r\n                    left={this.props.storeEditWordDisplay.left}\r\n                    text={this.props.storeEditWordDisplay.text}\r\n                    tag={this.props.storeEditWordDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //DWORDADJUST\r\n    getDWordAdjust = () => {\r\n        if (this.state.dataFirebaseDWordAdjust.length > 0) {\r\n            return this.state.dataFirebaseDWordAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditDWordAdjust.id && this.props.editDWordAdjust) return ''\r\n                if (value.key !== this.props.storeEditDWordAdjust.id || !this.props.editDWordAdjust) {\r\n                    return (<DWordAdjust\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getDWordAdjustAdd = () => {\r\n        return (\r\n            <DWordAdjustAdd\r\n                width={this.props.storeAddDWordAdjust.width}\r\n                height={this.props.storeAddDWordAdjust.height}\r\n                fontSize={this.props.storeAddDWordAdjust.fontSize}\r\n                top={this.props.storeAddDWordAdjust.top}\r\n                left={this.props.storeAddDWordAdjust.left}\r\n                text={this.props.storeAddDWordAdjust.text}\r\n                tag={this.props.storeAddDWordAdjust.tag}\r\n            />\r\n        )\r\n    }\r\n    getDWordAdjustEdit = () => {\r\n        if (this.props.storeEditDWordAdjust.id !== \"\") {\r\n            return (\r\n                <DWordAdjustAdd\r\n                    width={this.props.storeEditDWordAdjust.width}\r\n                    height={this.props.storeEditDWordAdjust.height}\r\n                    fontSize={this.props.storeEditDWordAdjust.fontSize}\r\n                    top={this.props.storeEditDWordAdjust.top}\r\n                    left={this.props.storeEditDWordAdjust.left}\r\n                    text={this.props.storeEditDWordAdjust.text}\r\n                    tag={this.props.storeEditDWordAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //DWORDDISPLAY\r\n    getDWordDisplay = () => {\r\n        if (this.state.dataFirebaseDWordDisplay.length > 0) {\r\n            return this.state.dataFirebaseDWordDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditDWordDisplay.id && this.props.editDWordDisplay) return ''\r\n                if (value.key !== this.props.storeEditDWordDisplay.id || !this.props.editDWordDisplay) {\r\n                    return (<DWordDisplay\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        divide={value.divide}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getDWordDisplayAdd = () => {\r\n        return (\r\n            <DWordDisplayAdd\r\n                width={this.props.storeAddDWordDisplay.width}\r\n                fontSize={this.props.storeAddDWordDisplay.fontSize}\r\n                top={this.props.storeAddDWordDisplay.top}\r\n                left={this.props.storeAddDWordDisplay.left}\r\n                text={this.props.storeAddDWordDisplay.text}\r\n                tag={this.props.storeAddDWordDisplay.tag}\r\n            />\r\n        )\r\n    }\r\n    getDWordDisplayEdit = () => {\r\n        if (this.props.storeEditDWordDisplay.id !== \"\") {\r\n            return (\r\n                <DWordDisplayAdd\r\n                    width={this.props.storeEditDWordDisplay.width}\r\n                    fontSize={this.props.storeEditDWordDisplay.fontSize}\r\n                    top={this.props.storeEditDWordDisplay.top}\r\n                    left={this.props.storeEditDWordDisplay.left}\r\n                    text={this.props.storeEditDWordDisplay.text}\r\n                    tag={this.props.storeEditDWordDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //INPUT\r\n    getInputWordAdjust = () => {\r\n        return (<InputWordAdjustClick\r\n            id={this.props.wordAdjustClick.id}\r\n            tag={this.props.wordAdjustClick.tag}\r\n            left={this.props.wordAdjustClick.left}\r\n            top={this.props.wordAdjustClick.top}\r\n            text={this.props.wordAdjustClick.text}\r\n            fontSize={this.props.wordAdjustClick.fontSize}\r\n            width={this.props.wordAdjustClick.width}\r\n        />)\r\n    }\r\n    render() {\r\n        // const { uid } = this.props;\r\n        // if (!uid) {\r\n        //     return <Redirect to='/signin' />\r\n        // }\r\n        var srcStatus = this.state.statusPLC === 'Connected' ? require('../../../images/Connected.png') : require('../../../images/Disconnect.png')\r\n        return (\r\n            <Row style={{ height: \"100%\" }}>\r\n                <Col style={{ overflow: \"auto\" }}>\r\n                    <div onClick={this.props.backgroundClick} className=\"tramtronbetong\" style={{ backgroundImage: `url(${img})`, position: 'relative' }}>\r\n                        <Tooltip title={this.props.parentScada} arrow>\r\n                            <img src={srcStatus} style={{ width: 50, height: 50 }} alt='ErrorImg' />\r\n                        </Tooltip>\r\n                        {/* parentScada */}\r\n                        {this.props.indexWordAdjustClick > 0 ? <InputWordAdjustClick /> : ''}\r\n                        {this.props.indexDWordAdjustClick > 0 ? <InputDWordAdjustClick /> : ''}\r\n                        {this.props.indexImageClick > 0 ? <ForceElement /> : ''}\r\n                        {this.getBitAdjust()}\r\n                        {this.getBitDisplay()}\r\n                        {this.getWordDisplay()}\r\n                        {this.getDWordDisplay()}\r\n                        {this.getWordAdjust()}\r\n                        {this.getDWordAdjust()}\r\n                        {this.getImage()}\r\n                        {this.getLabel()}\r\n                        {this.getLine()}\r\n                        {this.getPanel()}\r\n                        {this.getTextField()}\r\n                        {this.getTextFieldInput()}\r\n\r\n                        {this.props.addTextField === true ? this.getTextFieldAdd() : ''}\r\n                        {this.props.editTextField === true ? this.getTextFieldEdit() : ''}\r\n\r\n                        {this.props.addTextFieldInput === true ? this.getTextFieldInputAdd() : ''}\r\n                        {this.props.editTextFieldInput === true ? this.getTextFieldInputEdit() : ''}\r\n\r\n                        {this.props.addPanel === true ? this.getPanelAdd() : ''}\r\n                        {this.props.editPanel === true ? this.getPanelEdit() : ''}\r\n\r\n                        {this.props.addLine === true ? this.getLineAdd() : ''}\r\n\r\n                        {this.props.addImage === true ? this.getImageAdd() : ''}\r\n                        {this.props.editImage === true ? this.getImageAdd() : ''}\r\n\r\n                        {this.props.addLabel === true ? this.getLabelAdd() : ''}\r\n                        {this.props.editLabel === true ? this.getLabelEdit() : ''}\r\n\r\n                        {this.props.addWordDisplay === true ? this.getWordDisplayAdd() : ''}\r\n                        {this.props.editWordDisplay === true ? this.getWordDisplayEdit() : ''}\r\n\r\n                        {this.props.addDWordDisplay === true ? this.getDWordDisplayAdd() : ''}\r\n                        {this.props.editDWordDisplay === true ? this.getDWordDisplayEdit() : ''}\r\n\r\n                        {this.props.addWordAdjust === true ? this.getWordAdjustAdd() : ''}\r\n                        {this.props.editWordAdjust === true ? this.getWordAdjustEdit() : ''}\r\n\r\n                        {this.props.addBitAdjust === true ? this.getBitAdjustAdd() : ''}\r\n                        {this.props.editBitAdjust === true ? this.getBitAdjustEdit() : ''}\r\n\r\n                        {this.props.addBitDisplay === true ? this.getBitDisplayAdd() : ''}\r\n                        {this.props.editBitDisplay === true ? this.getBitDisplayEdit() : ''}\r\n\r\n                        {this.props.addDWordAdjust === true ? this.getDWordAdjustAdd() : ''}\r\n                        {this.props.editDWordAdjust === true ? this.getDWordAdjustEdit() : ''}\r\n                    </div>\r\n                </Col >\r\n                {this.props.addTextField === true ? <TextFieldFormAdd /> : ''}\r\n                {this.props.editTextField === true ? <TextFieldFormEdit dataFirebaseTextField={this.state.dataFirebaseTextField} /> : ''}\r\n                {this.props.addTextFieldInput === true ? <TextFieldInputFormAdd /> : ''}\r\n                {this.props.editTextFieldInput === true ? <TextFieldInputFormEdit dataFirebaseTextFieldInput={this.state.dataFirebaseTextFieldInput} /> : ''}\r\n                {this.props.addPanel === true ? <PanelFormAdd /> : ''}\r\n                {this.props.editPanel === true ? <PanelFormEdit dataFirebasePanel={this.state.dataFirebasePanel} /> : ''}\r\n                {this.props.addImage === true ? <ImageFormAdd /> : ''}\r\n                {this.props.editImage === true ? <ImageFormEdit dataFirebaseImage={this.state.dataFirebaseImage} /> : ''}\r\n                {this.props.addLabel === true ? <LabelFormAdd /> : ''}\r\n                {this.props.editLabel === true ? <LabelFormEdit dataFirebaseLabel={this.state.dataFirebaseLabel} /> : ''}\r\n                {this.props.addLine === true ? <LineFormAdd /> : ''}\r\n                {this.props.editLine === true ? <LineFormEdit dataFirebaseLine={this.state.dataFirebaseLine} /> : ''}\r\n                {this.props.addWordDisplay === true ? <WordDisplayFormAdd /> : ''}\r\n                {this.props.editWordDisplay === true ? <WordDisplayFormEdit dataFirebaseWordDisplay={this.state.dataFirebaseWordDisplay} /> : ''}\r\n                {this.props.addWordAdjust === true ? <WordAdjustFormAdd /> : ''}\r\n                {this.props.editWordAdjust === true ? <WordAdjustFormEdit dataFirebaseWordAdjust={this.state.dataFirebaseWordAdjust} /> : ''}\r\n                {this.props.addDWordDisplay === true ? <DWordDisplayFormAdd /> : ''}\r\n                {this.props.editDWordDisplay === true ? <DWordDisplayFormEdit dataFirebaseDWordDisplay={this.state.dataFirebaseDWordDisplay} /> : ''}\r\n                {this.props.addDWordAdjust === true ? <DWordAdjustFormAdd /> : ''}\r\n                {this.props.editDWordAdjust === true ? <DWordAdjustFormEdit dataFirebaseDWordAdjust={this.state.dataFirebaseDWordAdjust} /> : ''}\r\n                {this.props.addBitAdjust === true ? <BitAdjustFormAdd /> : ''}\r\n                {this.props.editBitAdjust === true ? <BitAdjustFormEdit dataFirebaseBitAdjust={this.state.dataFirebaseBitAdjust} /> : ''}\r\n                {this.props.addBitDisplay === true ? <BitDisplayFormAdd /> : ''}\r\n                {this.props.editBitDisplay === true ? <BitDisplayFormEdit dataFirebaseBitDisplay={this.state.dataFirebaseBitDisplay} /> : ''}\r\n            </Row>\r\n        )\r\n    };\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    parentScada: state.element.parentScada,\r\n    addTextField: state.auth.addTextField,\r\n    editTextField: state.auth.editTextField,\r\n    addTextFieldInput: state.auth.addTextFieldInput,\r\n    editTextFieldInput: state.auth.editTextFieldInput,\r\n    addPanel: state.auth.addPanel,\r\n    editPanel: state.auth.editPanel,\r\n    addImage: state.auth.addImage,\r\n    editImage: state.auth.editImage,\r\n    addLabel: state.auth.addLabel,\r\n    editLabel: state.auth.editLabel,\r\n    addLine: state.auth.addLine,\r\n    editLine: state.auth.editLine,\r\n    addWordDisplay: state.auth.addWordDisplay,\r\n    editWordDisplay: state.auth.editWordDisplay,\r\n    addDWordDisplay: state.auth.addDWordDisplay,\r\n    editDWordDisplay: state.auth.editDWordDisplay,\r\n    addWordAdjust: state.auth.addWordAdjust,\r\n    editWordAdjust: state.auth.editWordAdjust,\r\n    addDWordAdjust: state.auth.addDWordAdjust,\r\n    editDWordAdjust: state.auth.editDWordAdjust,\r\n    addBitAdjust: state.auth.addBitAdjust,\r\n    editBitAdjust: state.auth.editBitAdjust,\r\n    addBitDisplay: state.auth.addBitDisplay,\r\n    editBitDisplay: state.auth.editBitDisplay,\r\n    indexImageClick: state.background.indexImageClick,\r\n    indexWordAdjustClick: state.background.indexWordAdjustClick,\r\n    indexDWordAdjustClick: state.background.indexDWordAdjustClick,\r\n    storeAddLine: state.line.addLine,\r\n    storeAddImage: state.image.addImage,\r\n    storeAddLabel: state.label.addLabel,\r\n    storeAddWordDisplay: state.wordDisplay.addWordDisplay,\r\n    storeAddWordAdjust: state.wordAdjust.addWordAdjust,\r\n    storeAddDWordDisplay: state.dwordDisplay.addDWordDisplay,\r\n    storeAddDWordAdjust: state.dwordAdjust.addDWordAdjust,\r\n    storeAddBitDisplay: state.bitDisplay.addBitDisplay,\r\n    storeAddBitAdjust: state.bitAdjust.addBitAdjust,\r\n\r\n    storeEditImage: state.image.editImage,\r\n    storeEditLabel: state.label.editLabel,\r\n    storeEditWordDisplay: state.wordDisplay.editWordDisplay,\r\n    storeEditWordAdjust: state.wordAdjust.editWordAdjust,\r\n    storeEditDWordDisplay: state.dwordDisplay.editDWordDisplay,\r\n    storeEditDWordAdjust: state.dwordAdjust.editDWordAdjust,\r\n    storeEditBitDisplay: state.bitDisplay.editBitDisplay,\r\n    storeEditBitAdjust: state.bitAdjust.editBitAdjust,\r\n    uid: state.firebase.auth.uid,\r\n    storeAddPanel: state.panel.addPanel,\r\n    storeEditPanel: state.panel.editPanel,\r\n    storeAddTextField: state.textField.addTextField,\r\n    storeEditTextField: state.textField.editTextField,\r\n    storeAddTextFieldInput: state.textFieldInput.addTextField,\r\n    storeEditTextFieldInput: state.textFieldInput.editTextField,\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        backgroundClick: () => {\r\n            dispatch(backgroundClick())\r\n        },\r\n        actionSetParentScada: (item) => {\r\n            dispatch(actionSetParentScada(item))\r\n        },\r\n        actionGetPermission: (item) => {\r\n            dispatch(actionGetPermission(item))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConcreteMixing);"],"sourceRoot":""}