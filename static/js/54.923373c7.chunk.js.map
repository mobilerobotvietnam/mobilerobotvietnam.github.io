{"version":3,"sources":["component/Screen/OMRON/HoChiMinh_Viper.js","component/Screen/OMRON/ArrayImage.js"],"names":["ConcreteMixing","props","_this","Object","C_Users_TINH_VAN_LE_Desktop_React_MobileRobot_BTC_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_TINH_VAN_LE_Desktop_React_MobileRobot_BTC_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_TINH_VAN_LE_Desktop_React_MobileRobot_BTC_Client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","getPanel","state","dataFirebasePanel","length","map","value","key","storeEditPanel","id","editPanel","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_ScadaComponent_Panel_Panel__WEBPACK_IMPORTED_MODULE_62__","i","width","height","left","top","margin","backgroundColor","padding","borderRadius","boxShadow1","boxShadow2","boxShadow3","boxShadowColor","zIndex","getPanelAdd","_ScadaComponent_Panel_PanelAdd__WEBPACK_IMPORTED_MODULE_63__","storeAddPanel","getPanelEdit","getLine","dataFirebaseLine","idRun","editLine","split","element","elementRUN","find","x","nameElement","_layout_line_Line__WEBPACK_IMPORTED_MODULE_19__","type","getLineAdd","storeAddLine","_layout_line_LineAdd__WEBPACK_IMPORTED_MODULE_24__","addLineType","lineLeft","addLineLeft","lineTop","addLineTop","lineLength","addLineLength","getImage","dataFirebaseImage","storeEditImage","editImage","imageView","arrImage","name","src","stateElement","src_R","src_S","_layout_image_Image__WEBPACK_IMPORTED_MODULE_15__","url","getImageAdd","storeAddImage","nameImage","_layout_image_ImageAdd__WEBPACK_IMPORTED_MODULE_16__","getLabel","dataFirebaseLabel","storeEditLabel","editLabel","_layout_label_Label__WEBPACK_IMPORTED_MODULE_17__","text","color","fontSize","getLabelAdd","_layout_label_LabelAdd__WEBPACK_IMPORTED_MODULE_18__","storeAddLabel","getLabelEdit","getTextField","dataFirebaseTextField","storeEditTextField","editTextField","_layout_textField_TextFieldComponent__WEBPACK_IMPORTED_MODULE_70__","tag","label","rows","getTextFieldAdd","_layout_textField_TextFieldAdd__WEBPACK_IMPORTED_MODULE_67__","storeAddTextField","getTextFieldEdit","getTextFieldInput","dataFirebaseTextFieldInput","storeEditTextFieldInput","editTextFieldInput","_layout_textFieldInput_TextFieldInputComponent__WEBPACK_IMPORTED_MODULE_74__","getTextFieldInputAdd","_layout_textFieldInput_TextFieldInputAdd__WEBPACK_IMPORTED_MODULE_71__","storeAddTextFieldInput","getTextFieldInputEdit","getBitAdjust","dataFirebaseBitAdjust","storeEditBitAdjust","editBitAdjust","parseInt","_ScadaComponent_BitAdjust_BitAdjustToggle1__WEBPACK_IMPORTED_MODULE_49__","tagTextFieldInput","status","_ScadaComponent_BitAdjust_BitAdjustToggle2__WEBPACK_IMPORTED_MODULE_51__","_ScadaComponent_BitAdjust_BitAdjustToggle3__WEBPACK_IMPORTED_MODULE_53__","_ScadaComponent_BitAdjust_BitAdjustToggle4__WEBPACK_IMPORTED_MODULE_55__","getBitAdjustAdd","storeAddBitAdjust","_ScadaComponent_BitAdjust_BitAdjustToggleAdd1__WEBPACK_IMPORTED_MODULE_50__","_ScadaComponent_BitAdjust_BitAdjustToggleAdd2__WEBPACK_IMPORTED_MODULE_52__","_ScadaComponent_BitAdjust_BitAdjustToggleAdd3__WEBPACK_IMPORTED_MODULE_54__","_ScadaComponent_BitAdjust_BitAdjustToggleAdd4__WEBPACK_IMPORTED_MODULE_56__","getBitAdjustEdit","getBitDisplay","dataFirebaseBitDisplay","storeEditBitDisplay","editBitDisplay","_ScadaComponent_BitDisplay_BitDisplay1__WEBPACK_IMPORTED_MODULE_58__","text0","text1","color0","color1","blink0","blink1","image0","arrImageBitDisplay","nameImage0","image1","nameImage1","_ScadaComponent_BitDisplay_BitDisplay2__WEBPACK_IMPORTED_MODULE_59__","url0","url1","getBitDisplayAdd","storeAddBitDisplay","_ScadaComponent_BitDisplay_BitDisplayAdd1__WEBPACK_IMPORTED_MODULE_60__","_ScadaComponent_BitDisplay_BitDisplayAdd2__WEBPACK_IMPORTED_MODULE_61__","getBitDisplayEdit","getWordAdjust","dataFirebaseWordAdjust","storeEditWordAdjust","editWordAdjust","_ScadaComponent_WordAdjust_WordAdjust__WEBPACK_IMPORTED_MODULE_31__","getWordAdjustAdd","_ScadaComponent_WordAdjust_WordAdjustAdd__WEBPACK_IMPORTED_MODULE_41__","storeAddWordAdjust","getWordAdjustEdit","getWordDisplay","dataFirebaseWordDisplay","storeEditWordDisplay","editWordDisplay","_ScadaComponent_WordDisplay_WordDisplay__WEBPACK_IMPORTED_MODULE_29__","divide","getWordDisplayAdd","_ScadaComponent_WordDisplay_WordDisplayAdd__WEBPACK_IMPORTED_MODULE_39__","storeAddWordDisplay","getWordDisplayEdit","getDWordAdjust","dataFirebaseDWordAdjust","storeEditDWordAdjust","editDWordAdjust","_ScadaComponent_DWordAdjust_DWordAdjust__WEBPACK_IMPORTED_MODULE_32__","getDWordAdjustAdd","_ScadaComponent_DWordAdjust_DWordAdjustAdd__WEBPACK_IMPORTED_MODULE_42__","storeAddDWordAdjust","getDWordAdjustEdit","getDWordDisplay","dataFirebaseDWordDisplay","storeEditDWordDisplay","editDWordDisplay","_ScadaComponent_DWordDisplay_DWordDisplay__WEBPACK_IMPORTED_MODULE_30__","getDWordDisplayAdd","_ScadaComponent_DWordDisplay_DWordDisplayAdd__WEBPACK_IMPORTED_MODULE_40__","storeAddDWordDisplay","getDWordDisplayEdit","getInputWordAdjust","_ScadaComponent_InputWordAdjustClick__WEBPACK_IMPORTED_MODULE_21__","wordAdjustClick","statusPLC","_this2","actionGetPermission","actionSetParentScada","GetData","result","setState","resultRun","srcStatus","require","shards_react__WEBPACK_IMPORTED_MODULE_6__","style","overflow","onClick","backgroundClick","className","backgroundImage","concat","img","position","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_66___default","title","parentScada","arrow","alt","indexWordAdjustClick","indexDWordAdjustClick","_ScadaComponent_InputDWordAdjustClick__WEBPACK_IMPORTED_MODULE_22__","indexImageClick","_layout_ForceElement__WEBPACK_IMPORTED_MODULE_20__","addTextField","addTextFieldInput","addPanel","addLine","addImage","addLabel","addWordDisplay","addDWordDisplay","addWordAdjust","addBitAdjust","addBitDisplay","addDWordAdjust","_layout_textField_TextFieldFormAdd__WEBPACK_IMPORTED_MODULE_68__","_layout_textField_TextFieldFormEdit__WEBPACK_IMPORTED_MODULE_69__","_layout_textFieldInput_TextFieldInputFormAdd__WEBPACK_IMPORTED_MODULE_72__","_layout_textFieldInput_TextFieldInputFormEdit__WEBPACK_IMPORTED_MODULE_73__","_ScadaComponent_Panel_PanelFormAdd__WEBPACK_IMPORTED_MODULE_64__","_ScadaComponent_Panel_PanelFormEdit__WEBPACK_IMPORTED_MODULE_65__","_layout_image_ImageFormAdd__WEBPACK_IMPORTED_MODULE_10__","_layout_image_ImageFormEdit__WEBPACK_IMPORTED_MODULE_11__","_layout_label_LabelFormAdd__WEBPACK_IMPORTED_MODULE_12__","_layout_label_LabelFormEdit__WEBPACK_IMPORTED_MODULE_13__","_layout_line_LineFormAdd__WEBPACK_IMPORTED_MODULE_25__","_layout_line_LineFormEdit__WEBPACK_IMPORTED_MODULE_27__","_ScadaComponent_WordDisplay_WordDisplayFormAdd__WEBPACK_IMPORTED_MODULE_34__","_ScadaComponent_WordDisplay_WordDisplayFormEdit__WEBPACK_IMPORTED_MODULE_44__","_ScadaComponent_WordAdjust_WordAdjustFormAdd__WEBPACK_IMPORTED_MODULE_36__","_ScadaComponent_WordAdjust_WordAdjustFormEdit__WEBPACK_IMPORTED_MODULE_46__","_ScadaComponent_DWordDisplay_DWordDisplayFormAdd__WEBPACK_IMPORTED_MODULE_35__","_ScadaComponent_DWordDisplay_DWordDisplayFormEdit__WEBPACK_IMPORTED_MODULE_45__","_ScadaComponent_DWordAdjust_DWordAdjustFormAdd__WEBPACK_IMPORTED_MODULE_38__","_ScadaComponent_DWordAdjust_DWordAdjustFormEdit__WEBPACK_IMPORTED_MODULE_48__","_ScadaComponent_BitAdjust_BitAdjustFormAdd__WEBPACK_IMPORTED_MODULE_37__","_ScadaComponent_BitAdjust_BitAdjustFormEdit__WEBPACK_IMPORTED_MODULE_47__","_ScadaComponent_BitDisplay_BitDisplayFormAdd__WEBPACK_IMPORTED_MODULE_33__","_ScadaComponent_BitDisplay_BitDisplayFormEdit__WEBPACK_IMPORTED_MODULE_43__","Component","connect","ownProps","auth","background","line","image","wordDisplay","wordAdjust","dwordDisplay","dwordAdjust","bitDisplay","bitAdjust","uid","firebase","panel","textField","textFieldInput","dispatch","item","_images_CSC_R_gif__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_images_CSC_R_gif__WEBPACK_IMPORTED_MODULE_0___default","n","_images_CSC_S_gif__WEBPACK_IMPORTED_MODULE_1__","_images_CSC_S_gif__WEBPACK_IMPORTED_MODULE_1___default","_images_SG1_R_gif__WEBPACK_IMPORTED_MODULE_2__","_images_SG1_R_gif__WEBPACK_IMPORTED_MODULE_2___default","_images_SG1_S_gif__WEBPACK_IMPORTED_MODULE_3__","_images_SG1_S_gif__WEBPACK_IMPORTED_MODULE_3___default","_images_MIX1_R_gif__WEBPACK_IMPORTED_MODULE_4__","_images_MIX1_R_gif__WEBPACK_IMPORTED_MODULE_4___default","_images_MIX1_S_gif__WEBPACK_IMPORTED_MODULE_5__","_images_MIX1_S_gif__WEBPACK_IMPORTED_MODULE_5___default","_images_SGMIX_R_gif__WEBPACK_IMPORTED_MODULE_6__","_images_SGMIX_R_gif__WEBPACK_IMPORTED_MODULE_6___default","_images_SGMIX_S_gif__WEBPACK_IMPORTED_MODULE_7__","_images_SGMIX_S_gif__WEBPACK_IMPORTED_MODULE_7___default","_images_CR1_R_gif__WEBPACK_IMPORTED_MODULE_8__","_images_CR1_R_gif__WEBPACK_IMPORTED_MODULE_8___default","_images_CR1_S_gif__WEBPACK_IMPORTED_MODULE_9__","_images_CR1_S_gif__WEBPACK_IMPORTED_MODULE_9___default","_images_CC2_R_gif__WEBPACK_IMPORTED_MODULE_10__","_images_CC2_R_gif__WEBPACK_IMPORTED_MODULE_10___default","_images_CC2_S_gif__WEBPACK_IMPORTED_MODULE_11__","_images_CC2_S_gif__WEBPACK_IMPORTED_MODULE_11___default","_images_BE2_R_gif__WEBPACK_IMPORTED_MODULE_12__","_images_BE2_R_gif__WEBPACK_IMPORTED_MODULE_12___default","_images_BE2_S_gif__WEBPACK_IMPORTED_MODULE_13__","_images_BE2_S_gif__WEBPACK_IMPORTED_MODULE_13___default","CSC_R","CSC_S","SG1_R","SG1_S","MIX1_R","MIX1_S","SGMIX_R","SGMIX_S","CR1_R","CR1_S","CC2_R","CC2_S","BE2_R","BE2_S"],"mappings":"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","file":"static/js/54.923373c7.chunk.js","sourcesContent":["//HoChiMinh_Viper\r\n\r\nimport React, { Component } from 'react'\r\nimport { Col, Row } from 'shards-react';\r\nimport { connect } from 'react-redux';\r\nimport { actionSetParentScada } from '../../../redux/actions/elementAction'\r\nimport { actionGetPermission } from '../../../redux/actions/authAction'\r\nimport ImageFormAdd from '../../layout/image/ImageFormAdd';\r\nimport ImageFormEdit from '../../layout/image/ImageFormEdit';\r\nimport LabelFormAdd from '../../layout/label/LabelFormAdd';\r\nimport LabelFormEdit from '../../layout/label/LabelFormEdit';\r\nimport img from '../../../images/empty.png'\r\nimport Image from '../../layout/image/Image';\r\nimport ImageAdd from '../../layout/image/ImageAdd';\r\nimport Label from '../../layout/label/Label';\r\nimport LabelAdd from '../../layout/label/LabelAdd';\r\nimport Line from '../../layout/line/Line';\r\nimport ForceElement from '../../layout/ForceElement';\r\nimport InputWordAdjustClick from '../../ScadaComponent/InputWordAdjustClick';\r\nimport InputDWordAdjustClick from '../../ScadaComponent/InputDWordAdjustClick';\r\nimport { backgroundClick } from '../../../redux/actions/backgroundAction'\r\nimport LineAdd from '../../layout/line/LineAdd';\r\nimport LineFormAdd from '../../layout/line/LineFormAdd'\r\nimport * as GetData from '../../layout/GetData/FirebaseGetData';\r\nimport LineFormEdit from '../../layout/line/LineFormEdit';\r\nimport arrImage from './ArrayImage';\r\nimport WordDisplay from '../../ScadaComponent/WordDisplay/WordDisplay'\r\nimport DWordDisplay from '../../ScadaComponent/DWordDisplay/DWordDisplay'\r\nimport WordAdjust from '../../ScadaComponent/WordAdjust/WordAdjust'\r\nimport DWordAdjust from '../../ScadaComponent/DWordAdjust/DWordAdjust'\r\nimport BitDisplayFormAdd from '../../ScadaComponent/BitDisplay/BitDisplayFormAdd'\r\nimport WordDisplayFormAdd from '../../ScadaComponent/WordDisplay/WordDisplayFormAdd'\r\nimport DWordDisplayFormAdd from '../../ScadaComponent/DWordDisplay/DWordDisplayFormAdd'\r\nimport WordAdjustFormAdd from '../../ScadaComponent/WordAdjust/WordAdjustFormAdd'\r\nimport BitAdjustFormAdd from '../../ScadaComponent/BitAdjust/BitAdjustFormAdd'\r\nimport DWordAdjustFormAdd from '../../ScadaComponent/DWordAdjust/DWordAdjustFormAdd'\r\nimport WordDisplayAdd from '../../ScadaComponent/WordDisplay/WordDisplayAdd'\r\nimport DWordDisplayAdd from '../../ScadaComponent/DWordDisplay/DWordDisplayAdd'\r\nimport WordAdjustAdd from '../../ScadaComponent/WordAdjust/WordAdjustAdd'\r\nimport DWordAdjustAdd from '../../ScadaComponent/DWordAdjust/DWordAdjustAdd'\r\nimport BitDisplayFormEdit from '../../ScadaComponent/BitDisplay/BitDisplayFormEdit'\r\nimport WordDisplayFormEdit from '../../ScadaComponent/WordDisplay/WordDisplayFormEdit'\r\nimport DWordDisplayFormEdit from '../../ScadaComponent/DWordDisplay/DWordDisplayFormEdit'\r\nimport WordAdjustFormEdit from '../../ScadaComponent/WordAdjust/WordAdjustFormEdit'\r\nimport BitAdjustFormEdit from '../../ScadaComponent/BitAdjust/BitAdjustFormEdit'\r\nimport DWordAdjustFormEdit from '../../ScadaComponent/DWordAdjust/DWordAdjustFormEdit'\r\nimport BitAdjustToggle1 from '../../ScadaComponent/BitAdjust/BitAdjustToggle1';\r\nimport BitAdjustToggleAdd1 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd1'\r\nimport BitAdjustToggle2 from '../../ScadaComponent/BitAdjust/BitAdjustToggle2';\r\nimport BitAdjustToggleAdd2 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd2'\r\nimport BitAdjustToggle3 from '../../ScadaComponent/BitAdjust/BitAdjustToggle3';\r\nimport BitAdjustToggleAdd3 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd3'\r\nimport BitAdjustToggle4 from '../../ScadaComponent/BitAdjust/BitAdjustToggle4';\r\nimport BitAdjustToggleAdd4 from '../../ScadaComponent/BitAdjust/BitAdjustToggleAdd4'\r\nimport arrImageBitDisplay from '../../ScadaComponent/ArrayImageBitDisplay'\r\nimport BitDisplay1 from '../../ScadaComponent/BitDisplay/BitDisplay1';\r\nimport BitDisplay2 from '../../ScadaComponent/BitDisplay/BitDisplay2';\r\nimport BitDisplayAdd1 from '../../ScadaComponent/BitDisplay/BitDisplayAdd1'\r\nimport BitDisplayAdd2 from '../../ScadaComponent/BitDisplay/BitDisplayAdd2'\r\nimport Panel from '../../ScadaComponent/Panel/Panel'\r\nimport PanelAdd from '../../ScadaComponent/Panel/PanelAdd'\r\nimport PanelFormAdd from '../../ScadaComponent/Panel/PanelFormAdd'\r\nimport PanelFormEdit from '../../ScadaComponent/Panel/PanelFormEdit'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TextFieldAdd from '../../layout/textField/TextFieldAdd';\r\nimport TextFieldFormAdd from '../../layout/textField/TextFieldFormAdd';\r\nimport TextFieldFormEdit from '../../layout/textField/TextFieldFormEdit';\r\nimport TextFieldComponent from '../../layout/textField/TextFieldComponent';\r\nimport TextFieldInputAdd from '../../layout/textFieldInput/TextFieldInputAdd';\r\nimport TextFieldInputFormAdd from '../../layout/textFieldInput/TextFieldInputFormAdd';\r\nimport TextFieldInputFormEdit from '../../layout/textFieldInput/TextFieldInputFormEdit';\r\nimport TextFieldInputComponent from '../../layout/textFieldInput/TextFieldInputComponent';\r\nvar IdPage = 'HoChiMinh_Viper'\r\n\r\nclass ConcreteMixing extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            elementRUN: [],\r\n            dataFirebaseImage: [],\r\n            dataFirebaseLabel: [],\r\n            dataFirebaseLine: [],\r\n            dataFirebaseWordDisplay: [],\r\n            dataFirebaseDWordDisplay: [],\r\n            dataFirebaseWordAdjust: [],\r\n            dataFirebaseBitAdjust: [],\r\n            dataFirebaseDWordAdjust: [],\r\n            dataFirebaseBitDisplay: [],\r\n            dataFirebasePanel: [],\r\n            dataFirebaseTextField: [],\r\n            dataFirebaseTextFieldInput: [],\r\n            statusPLC: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.props.actionGetPermission(IdPage)\r\n        this.props.actionSetParentScada(IdPage)\r\n        GetData.GetStatusPLCImage((result) => {\r\n            this.setState({\r\n                statusPLC: result\r\n            })\r\n        })\r\n        GetData.GetImage((result, resultRun) => {\r\n            this.setState({\r\n                dataFirebaseImage: result,\r\n                elementRUN: resultRun\r\n            })\r\n        });\r\n        GetData.GetPanel((result) => {\r\n            this.setState({\r\n                dataFirebasePanel: result\r\n            })\r\n        })\r\n        GetData.GetTextField((result) => {\r\n            this.setState({\r\n                dataFirebaseTextField: result\r\n            })\r\n        })\r\n        GetData.GetTextFieldInput((result) => {\r\n            this.setState({\r\n                dataFirebaseTextFieldInput: result\r\n            })\r\n        })\r\n        GetData.GetLabel((result) => {\r\n            this.setState({\r\n                dataFirebaseLabel: result\r\n            })\r\n        })\r\n        GetData.GetLineData((result) => {\r\n            this.setState({\r\n                dataFirebaseLine: result\r\n            })\r\n        })\r\n        GetData.GetBitDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseBitDisplay: result\r\n            })\r\n        })\r\n        GetData.GetWordDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseWordDisplay: result\r\n            })\r\n        })\r\n        GetData.GetWordAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseWordAdjust: result\r\n            })\r\n        })\r\n        GetData.GetBitAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseBitAdjust: result\r\n            })\r\n        })\r\n        GetData.GetDWordAdjustData((result) => {\r\n            this.setState({\r\n                dataFirebaseDWordAdjust: result\r\n            })\r\n        })\r\n        GetData.GetDWordDisplayData((result) => {\r\n            this.setState({\r\n                dataFirebaseDWordDisplay: result\r\n            })\r\n        })\r\n    }\r\n    getPanel = () => {\r\n        if (this.state.dataFirebasePanel.length > 0) {\r\n            return this.state.dataFirebasePanel.map((value, key) => {\r\n                if (value.key === this.props.storeEditPanel.id && this.props.editPanel) return ''\r\n                if (value.key !== this.props.storeEditPanel.id || !this.props.editPanel) {\r\n                    return (\r\n                        <Panel\r\n                            key={key}\r\n                            i={value.key}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            margin={value.margin}\r\n                            backgroundColor={value.backgroundColor}\r\n                            padding={value.padding}\r\n                            borderRadius={value.borderRadius}\r\n                            boxShadow1={value.boxShadow1}\r\n                            boxShadow2={value.boxShadow2}\r\n                            boxShadow3={value.boxShadow3}\r\n                            boxShadowColor={value.boxShadowColor}\r\n                            zIndex={value.zIndex}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getPanelAdd = () => {\r\n        return (\r\n            <PanelAdd\r\n                width={this.props.storeAddPanel.width}\r\n                height={this.props.storeAddPanel.height}\r\n                left={this.props.storeAddPanel.left}\r\n                top={this.props.storeAddPanel.top}\r\n                margin={this.props.storeAddPanel.margin}\r\n                backgroundColor={this.props.storeAddPanel.backgroundColor}\r\n                padding={this.props.storeAddPanel.padding}\r\n                borderRadius={this.props.storeAddPanel.borderRadius}\r\n                boxShadow1={this.props.storeAddPanel.boxShadow1}\r\n                boxShadow2={this.props.storeAddPanel.boxShadow2}\r\n                boxShadow3={this.props.storeAddPanel.boxShadow3}\r\n                boxShadowColor={this.props.storeAddPanel.boxShadowColor}\r\n                zIndex={this.props.storeAddPanel.zIndex}\r\n            />\r\n        )\r\n    }\r\n    getPanelEdit = () => {\r\n        if (this.props.storeEditPanel.id !== '') {\r\n            return (\r\n                <PanelAdd\r\n                    width={this.props.storeEditPanel.width}\r\n                    height={this.props.storeEditPanel.height}\r\n                    left={this.props.storeEditPanel.left}\r\n                    top={this.props.storeEditPanel.top}\r\n                    margin={this.props.storeEditPanel.margin}\r\n                    backgroundColor={this.props.storeEditPanel.backgroundColor}\r\n                    padding={this.props.storeEditPanel.padding}\r\n                    borderRadius={this.props.storeEditPanel.borderRadius}\r\n                    boxShadow1={this.props.storeEditPanel.boxShadow1}\r\n                    boxShadow2={this.props.storeEditPanel.boxShadow2}\r\n                    boxShadow3={this.props.storeEditPanel.boxShadow3}\r\n                    boxShadowColor={this.props.storeEditPanel.boxShadowColor}\r\n                    zIndex={this.props.storeEditPanel.zIndex}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    getLine = () => {\r\n        if (this.state.dataFirebaseLine.length > 0) {\r\n            return this.state.dataFirebaseLine.map((value, key) => {\r\n                if (value.idRun && value.idRun && !this.props.editLine) {\r\n                    let arrRun = value.idRun.split('_');\r\n                    return (arrRun.map((element, key) => {\r\n                        let ElementRun = this.state.elementRUN.find(x => x.nameElement === element)\r\n                        if (ElementRun) {\r\n                            return (\r\n                                <Line\r\n                                    key={key}\r\n                                    i={value.key}\r\n                                    type={value.type}\r\n                                    idRun={value.idRun}\r\n                                    length={value.length}\r\n                                    left={value.left}\r\n                                    top={value.top}\r\n                                />\r\n                            )\r\n                        }\r\n                        return null\r\n                    }))\r\n                } else {\r\n                    if (this.props.editLine)\r\n                        return (\r\n                            <Line\r\n                                key={key}\r\n                                i={value.key}\r\n                                type={value.type}\r\n                                idRun={value.idRun}\r\n                                length={value.length}\r\n                                left={value.left}\r\n                                top={value.top}\r\n                            />\r\n                        )\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n    getLineAdd = () => {\r\n        if (this.props.storeAddLine.length > 0) {\r\n            return this.props.storeAddLine.map((value, key) => {\r\n                return (\r\n                    <LineAdd\r\n                        key={key}\r\n                        type={value.addLineType}\r\n                        lineLeft={value.addLineLeft}\r\n                        lineTop={value.addLineTop}\r\n                        lineLength={value.addLineLength}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n    //IMAGE\r\n    getImage = () => {\r\n        if (this.state.dataFirebaseImage.length > 0) {\r\n            return this.state.dataFirebaseImage.map((value, key) => {\r\n                if (value.key === this.props.storeEditImage.id && this.props.editImage) return ''\r\n                if (value.key !== this.props.storeEditImage.id || !this.props.editImage) {\r\n                    const imageView = arrImage.find(x => x.name === value.src)\r\n                    var src = '';\r\n                    if (value.stateElement === 1) src = imageView.src_R;\r\n                    if (value.stateElement === 0) src = imageView.src_S;\r\n                    return (\r\n                        <Image\r\n                            key={key}\r\n                            i={value.key}\r\n                            url={src}\r\n                            src={value.src}\r\n                            top={value.top}\r\n                            left={value.left}\r\n                            nameElement={value.nameElement}\r\n                            stateElement={value.stateElement}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getImageAdd = () => {\r\n        const imageView = arrImage.find(x => x.name === this.props.storeAddImage.nameImage)\r\n        var src = '';\r\n        if (imageView) {\r\n            if (this.props.storeAddImage.state === 1) src = imageView.src_R;\r\n            if (this.props.storeAddImage.state === 0) src = imageView.src_S;\r\n            return (\r\n                <ImageAdd\r\n                    url={src}\r\n                    top={this.props.storeAddImage.top}\r\n                    left={this.props.storeAddImage.left}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //LABEL\r\n    getLabel = () => {\r\n        if (this.state.dataFirebaseLabel.length > 0) {\r\n            return this.state.dataFirebaseLabel.map((value, key) => {\r\n                if (value.key === this.props.storeEditLabel.id && this.props.editLabel) return ''\r\n                if (value.key !== this.props.storeEditLabel.id || !this.props.editLabel) {\r\n                    return (\r\n                        <Label\r\n                            key={key}\r\n                            i={value.key}\r\n                            text={value.text}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            top={value.top}\r\n                            left={value.left} />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getLabelAdd = () => {\r\n        return (\r\n            <LabelAdd\r\n                text={this.props.storeAddLabel.text}\r\n                top={this.props.storeAddLabel.top}\r\n                left={this.props.storeAddLabel.left}\r\n                color={this.props.storeAddLabel.color}\r\n                fontSize={this.props.storeAddLabel.fontSize}\r\n                width={this.props.storeAddLabel.width}\r\n            />\r\n        )\r\n    }\r\n    getLabelEdit = () => {\r\n        if (this.props.storeEditLabel.id !== \"\") {\r\n            return (\r\n                <LabelAdd\r\n                    text={this.props.storeEditLabel.text}\r\n                    top={this.props.storeEditLabel.top}\r\n                    left={this.props.storeEditLabel.left}\r\n                    color={this.props.storeEditLabel.color}\r\n                    fontSize={this.props.storeEditLabel.fontSize}\r\n                    width={this.props.storeEditLabel.width}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    //TEXT FIELD\r\n    getTextField = () => {\r\n        if (this.state.dataFirebaseTextField.length > 0) {\r\n            return this.state.dataFirebaseTextField.map((value, key) => {\r\n                if (value.key === this.props.storeEditTextField.id && this.props.editTextField) return ''\r\n                if (value.key !== this.props.storeEditTextField.id || !this.props.editTextField) {\r\n                    return (\r\n                        <TextFieldComponent\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            label={value.label}\r\n                            value={value.value}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            width={value.width}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            rows={value.rows}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getTextFieldAdd = () => {\r\n        return (\r\n            <TextFieldAdd\r\n                tag={this.props.storeAddTextField.tag}\r\n                label={this.props.storeAddTextField.label}\r\n                value={this.props.storeAddTextField.value}\r\n                left={this.props.storeAddTextField.left}\r\n                top={this.props.storeAddTextField.top}\r\n                width={this.props.storeAddTextField.width}\r\n                color={this.props.storeAddTextField.color}\r\n                fontSize={this.props.storeAddTextField.fontSize}\r\n                rows={this.props.storeAddTextField.rows}\r\n            />\r\n        )\r\n    }\r\n    getTextFieldEdit = () => {\r\n        if (this.props.storeEditTextField.id !== \"\") {\r\n            return (\r\n                <TextFieldAdd\r\n                    tag={this.props.storeEditTextField.tag}\r\n                    label={this.props.storeEditTextField.label}\r\n                    value={this.props.storeEditTextField.value}\r\n                    left={this.props.storeEditTextField.left}\r\n                    top={this.props.storeEditTextField.top}\r\n                    width={this.props.storeEditTextField.width}\r\n                    color={this.props.storeEditTextField.color}\r\n                    fontSize={this.props.storeEditTextField.fontSize}\r\n                    rows={this.props.storeEditTextField.rows}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    //TEXT FIELD INPUT\r\n    getTextFieldInput = () => {\r\n        if (this.state.dataFirebaseTextFieldInput.length > 0) {\r\n            return this.state.dataFirebaseTextFieldInput.map((value, key) => {\r\n                if (value.key === this.props.storeEditTextFieldInput.id && this.props.editTextFieldInput) return ''\r\n                if (value.key !== this.props.storeEditTextFieldInput.id || !this.props.editTextFieldInput) {\r\n                    return (\r\n                        <TextFieldInputComponent\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            label={value.label}\r\n                            value={value.value}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            width={value.width}\r\n                            color={value.color}\r\n                            fontSize={value.fontSize}\r\n                            rows={value.rows}\r\n                        />\r\n                    )\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getTextFieldInputAdd = () => {\r\n        return (\r\n            <TextFieldInputAdd\r\n                tag={this.props.storeAddTextFieldInput.tag}\r\n                label={this.props.storeAddTextFieldInput.label}\r\n                value={this.props.storeAddTextFieldInput.value}\r\n                left={this.props.storeAddTextFieldInput.left}\r\n                top={this.props.storeAddTextFieldInput.top}\r\n                width={this.props.storeAddTextFieldInput.width}\r\n                color={this.props.storeAddTextFieldInput.color}\r\n                fontSize={this.props.storeAddTextFieldInput.fontSize}\r\n                rows={this.props.storeAddTextFieldInput.rows}\r\n            />\r\n        )\r\n    }\r\n    getTextFieldInputEdit = () => {\r\n        if (this.props.storeEditTextFieldInput.id !== \"\") {\r\n            return (\r\n                <TextFieldInputAdd\r\n                    tag={this.props.storeEditTextFieldInput.tag}\r\n                    label={this.props.storeEditTextFieldInput.label}\r\n                    value={this.props.storeEditTextFieldInput.value}\r\n                    left={this.props.storeEditTextFieldInput.left}\r\n                    top={this.props.storeEditTextFieldInput.top}\r\n                    width={this.props.storeEditTextFieldInput.width}\r\n                    color={this.props.storeEditTextFieldInput.color}\r\n                    fontSize={this.props.storeEditTextFieldInput.fontSize}\r\n                    rows={this.props.storeEditTextFieldInput.rows}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //BIT ADJUST\r\n    getBitAdjust = () => {\r\n        if (this.state.dataFirebaseBitAdjust.length > 0) {\r\n            return this.state.dataFirebaseBitAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditBitAdjust.id && this.props.editBitAdjust) return '';\r\n                if (value.key !== this.props.storeEditBitAdjust.id || !this.props.editBitAdjust) {\r\n                    if (parseInt(value.type) === 1) {\r\n                        return (<BitAdjustToggle1\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 2) {\r\n                        return (<BitAdjustToggle2\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 3) {\r\n                        return (<BitAdjustToggle3\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 4) {\r\n                        return (<BitAdjustToggle4\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            tagTextFieldInput={value.tagTextFieldInput}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text={value.text}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            height={value.height}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                        />)\r\n                    }\r\n                    return (<BitAdjustToggle1\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text='NotMatchType'\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                        type={value.type}\r\n                        status={value.status}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getBitAdjustAdd = () => {\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 1) {\r\n            return (\r\n                <BitAdjustToggleAdd1\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 2) {\r\n            return (\r\n                <BitAdjustToggleAdd2\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 3) {\r\n            return (\r\n                <BitAdjustToggleAdd3\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitAdjust.type) === 4) {\r\n            return (\r\n                <BitAdjustToggleAdd4\r\n                    width={this.props.storeAddBitAdjust.width}\r\n                    height={this.props.storeAddBitAdjust.height}\r\n                    fontSize={this.props.storeAddBitAdjust.fontSize}\r\n                    top={this.props.storeAddBitAdjust.top}\r\n                    left={this.props.storeAddBitAdjust.left}\r\n                    text={this.props.storeAddBitAdjust.text}\r\n                    tag={this.props.storeAddBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    getBitAdjustEdit = () => {\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 1) {\r\n            return (\r\n                <BitAdjustToggleAdd1\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 2) {\r\n            return (\r\n                <BitAdjustToggleAdd2\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 3) {\r\n            return (\r\n                <BitAdjustToggleAdd3\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitAdjust.type) === 4) {\r\n            return (\r\n                <BitAdjustToggleAdd4\r\n                    width={this.props.storeEditBitAdjust.width}\r\n                    height={this.props.storeEditBitAdjust.height}\r\n                    fontSize={this.props.storeEditBitAdjust.fontSize}\r\n                    top={this.props.storeEditBitAdjust.top}\r\n                    left={this.props.storeEditBitAdjust.left}\r\n                    text={this.props.storeEditBitAdjust.text}\r\n                    tag={this.props.storeEditBitAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //BITDISPLAY\r\n    getBitDisplay = () => {\r\n        if (this.state.dataFirebaseBitDisplay.length > 0) {\r\n            return this.state.dataFirebaseBitDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditBitDisplay.id && this.props.editBitDisplay) return ''\r\n                if (value.key !== this.props.storeEditBitDisplay.id || !this.props.editBitDisplay) {\r\n                    if (parseInt(value.type) === 1) {\r\n                        return (<BitDisplay1\r\n                            key={key}\r\n                            i={value.key}\r\n                            tag={value.tag}\r\n                            left={value.left}\r\n                            top={value.top}\r\n                            text0={value.text0}\r\n                            text1={value.text1}\r\n                            color0={value.color0}\r\n                            color1={value.color1}\r\n                            fontSize={value.fontSize}\r\n                            width={value.width}\r\n                            type={value.type}\r\n                            status={value.status}\r\n                            blink0={value.blink0}\r\n                            blink1={value.blink1}\r\n                        />)\r\n                    }\r\n                    if (parseInt(value.type) === 2) {\r\n                        const image0 = arrImageBitDisplay.find(x => x.name === value.nameImage0)\r\n                        const image1 = arrImageBitDisplay.find(x => x.name === value.nameImage1)\r\n                        if (image0 || image1) {\r\n                            return (<BitDisplay2\r\n                                key={key}\r\n                                i={value.key}\r\n                                tag={value.tag}\r\n                                left={value.left}\r\n                                top={value.top}\r\n                                url0={image0 ? image0.src : null}\r\n                                url1={image1 ? image1.src : null}\r\n                                nameImage0={value.nameImage0}\r\n                                nameImage1={value.nameImage1}\r\n                                width={value.width}\r\n                                status={value.status}\r\n                                type={value.type}\r\n                                fontSize={value.fontSize}\r\n                                text0={value.text0}\r\n                                text1={value.text1}\r\n                                color0={value.color0}\r\n                                color1={value.color1}\r\n                                blink0={value.blink0}\r\n                                blink1={value.blink1}\r\n                            />)\r\n                        }\r\n\r\n                    }\r\n                    return (<BitDisplay1\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text0='NotMatchType'\r\n                        text1='NotMatchType'\r\n                        color0={value.color0}\r\n                        color1={value.color1}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        type={value.type}\r\n                        status={value.status}\r\n                        blink0={value.blink0}\r\n                        blink1={value.blink1}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getBitDisplayAdd = () => {\r\n        if (parseInt(this.props.storeAddBitDisplay.type) === 1) {\r\n            return (\r\n                <BitDisplayAdd1\r\n                    width={this.props.storeAddBitDisplay.width}\r\n                    fontSize={this.props.storeAddBitDisplay.fontSize}\r\n                    top={this.props.storeAddBitDisplay.top}\r\n                    left={this.props.storeAddBitDisplay.left}\r\n                    text0={this.props.storeAddBitDisplay.text0}\r\n                    text1={this.props.storeAddBitDisplay.text1}\r\n                    color0={this.props.storeAddBitDisplay.color0}\r\n                    color1={this.props.storeAddBitDisplay.color1}\r\n                    type={this.props.storeAddBitDisplay.type}\r\n                    tag={this.props.storeAddBitDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeAddBitDisplay.type) === 2) {\r\n            const image0 = arrImageBitDisplay.find(x => x.name === this.props.storeAddBitDisplay.nameImage0)\r\n            const image1 = arrImageBitDisplay.find(x => x.name === this.props.storeAddBitDisplay.nameImage1)\r\n            if (image0 || image1) {\r\n                return (\r\n                    <BitDisplayAdd2\r\n                        url0={image0 ? image0.src : ''}\r\n                        url1={image1 ? image1.src : ''}\r\n                        top={this.props.storeAddBitDisplay.top}\r\n                        left={this.props.storeAddBitDisplay.left}\r\n                        width={this.props.storeAddBitDisplay.width}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    getBitDisplayEdit = () => {\r\n        if (parseInt(this.props.storeEditBitDisplay.type) === 1) {\r\n            return (\r\n                <BitDisplayAdd1\r\n                    width={this.props.storeEditBitDisplay.width}\r\n                    fontSize={this.props.storeEditBitDisplay.fontSize}\r\n                    top={this.props.storeEditBitDisplay.top}\r\n                    left={this.props.storeEditBitDisplay.left}\r\n                    text0={this.props.storeEditBitDisplay.text0}\r\n                    text1={this.props.storeEditBitDisplay.text1}\r\n                    color0={this.props.storeEditBitDisplay.color0}\r\n                    color1={this.props.storeEditBitDisplay.color1}\r\n                    type={this.props.storeEditBitDisplay.type}\r\n                    tag={this.props.storeEditBitDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n        if (parseInt(this.props.storeEditBitDisplay.type) === 2) {\r\n            const image0 = arrImageBitDisplay.find(x => x.name === this.props.storeEditBitDisplay.nameImage0)\r\n            const image1 = arrImageBitDisplay.find(x => x.name === this.props.storeEditBitDisplay.nameImage1)\r\n            if (image0 || image1) {\r\n                return (\r\n                    <BitDisplayAdd2\r\n                        url0={image0 ? image0.src : ''}\r\n                        url1={image1 ? image1.src : ''}\r\n                        top={this.props.storeEditBitDisplay.top}\r\n                        left={this.props.storeEditBitDisplay.left}\r\n                        width={this.props.storeEditBitDisplay.width}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    }\r\n    //WORDADJUST\r\n    getWordAdjust = () => {\r\n        if (this.state.dataFirebaseWordAdjust.length > 0) {\r\n            return this.state.dataFirebaseWordAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditWordAdjust.id && this.props.editWordAdjust) return ''\r\n                if (value.key !== this.props.storeEditWordAdjust.id || !this.props.editWordAdjust) {\r\n                    return (<WordAdjust\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        else return null\r\n    }\r\n    getWordAdjustAdd = () => {\r\n        return (\r\n            <WordAdjustAdd\r\n                width={this.props.storeAddWordAdjust.width}\r\n                height={this.props.storeAddWordAdjust.height}\r\n                fontSize={this.props.storeAddWordAdjust.fontSize}\r\n                top={this.props.storeAddWordAdjust.top}\r\n                left={this.props.storeAddWordAdjust.left}\r\n                text={this.props.storeAddWordAdjust.text}\r\n                tag={this.props.storeAddWordAdjust.tag}\r\n            />\r\n        )\r\n    }\r\n    getWordAdjustEdit = () => {\r\n        if (this.props.storeEditWordAdjust.id !== \"\") {\r\n            return (\r\n                <WordAdjustAdd\r\n                    width={this.props.storeEditWordAdjust.width}\r\n                    height={this.props.storeEditWordAdjust.height}\r\n                    fontSize={this.props.storeEditWordAdjust.fontSize}\r\n                    top={this.props.storeEditWordAdjust.top}\r\n                    left={this.props.storeEditWordAdjust.left}\r\n                    text={this.props.storeEditWordAdjust.text}\r\n                    tag={this.props.storeEditWordAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //WORDDISPLAY\r\n    getWordDisplay = () => {\r\n        if (this.state.dataFirebaseWordDisplay.length > 0) {\r\n            return this.state.dataFirebaseWordDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditWordDisplay.id && this.props.editWordDisplay) return ''\r\n                if (value.key !== this.props.storeEditWordDisplay.id || !this.props.editWordDisplay) {\r\n                    return (<WordDisplay\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        divide={value.divide}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getWordDisplayAdd = () => {\r\n        return (\r\n            <WordDisplayAdd\r\n                width={this.props.storeAddWordDisplay.width}\r\n                fontSize={this.props.storeAddWordDisplay.fontSize}\r\n                top={this.props.storeAddWordDisplay.top}\r\n                left={this.props.storeAddWordDisplay.left}\r\n                text={this.props.storeAddWordDisplay.text}\r\n                tag={this.props.storeAddWordDisplay.tag}\r\n            />\r\n        )\r\n    }\r\n    getWordDisplayEdit = () => {\r\n        if (this.props.storeEditWordDisplay.id !== \"\") {\r\n            return (\r\n                <WordDisplayAdd\r\n                    width={this.props.storeEditWordDisplay.width}\r\n                    fontSize={this.props.storeEditWordDisplay.fontSize}\r\n                    top={this.props.storeEditWordDisplay.top}\r\n                    left={this.props.storeEditWordDisplay.left}\r\n                    text={this.props.storeEditWordDisplay.text}\r\n                    tag={this.props.storeEditWordDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //DWORDADJUST\r\n    getDWordAdjust = () => {\r\n        if (this.state.dataFirebaseDWordAdjust.length > 0) {\r\n            return this.state.dataFirebaseDWordAdjust.map((value, key) => {\r\n                if (value.key === this.props.storeEditDWordAdjust.id && this.props.editDWordAdjust) return ''\r\n                if (value.key !== this.props.storeEditDWordAdjust.id || !this.props.editDWordAdjust) {\r\n                    return (<DWordAdjust\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                        height={value.height}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getDWordAdjustAdd = () => {\r\n        return (\r\n            <DWordAdjustAdd\r\n                width={this.props.storeAddDWordAdjust.width}\r\n                height={this.props.storeAddDWordAdjust.height}\r\n                fontSize={this.props.storeAddDWordAdjust.fontSize}\r\n                top={this.props.storeAddDWordAdjust.top}\r\n                left={this.props.storeAddDWordAdjust.left}\r\n                text={this.props.storeAddDWordAdjust.text}\r\n                tag={this.props.storeAddDWordAdjust.tag}\r\n            />\r\n        )\r\n    }\r\n    getDWordAdjustEdit = () => {\r\n        if (this.props.storeEditDWordAdjust.id !== \"\") {\r\n            return (\r\n                <DWordAdjustAdd\r\n                    width={this.props.storeEditDWordAdjust.width}\r\n                    height={this.props.storeEditDWordAdjust.height}\r\n                    fontSize={this.props.storeEditDWordAdjust.fontSize}\r\n                    top={this.props.storeEditDWordAdjust.top}\r\n                    left={this.props.storeEditDWordAdjust.left}\r\n                    text={this.props.storeEditDWordAdjust.text}\r\n                    tag={this.props.storeEditDWordAdjust.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //DWORDDISPLAY\r\n    getDWordDisplay = () => {\r\n        if (this.state.dataFirebaseDWordDisplay.length > 0) {\r\n            return this.state.dataFirebaseDWordDisplay.map((value, key) => {\r\n                if (value.key === this.props.storeEditDWordDisplay.id && this.props.editDWordDisplay) return ''\r\n                if (value.key !== this.props.storeEditDWordDisplay.id || !this.props.editDWordDisplay) {\r\n                    return (<DWordDisplay\r\n                        key={key}\r\n                        i={value.key}\r\n                        tag={value.tag}\r\n                        divide={value.divide}\r\n                        left={value.left}\r\n                        top={value.top}\r\n                        text={value.text}\r\n                        fontSize={value.fontSize}\r\n                        width={value.width}\r\n                    />)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n    }\r\n    getDWordDisplayAdd = () => {\r\n        return (\r\n            <DWordDisplayAdd\r\n                width={this.props.storeAddDWordDisplay.width}\r\n                fontSize={this.props.storeAddDWordDisplay.fontSize}\r\n                top={this.props.storeAddDWordDisplay.top}\r\n                left={this.props.storeAddDWordDisplay.left}\r\n                text={this.props.storeAddDWordDisplay.text}\r\n                tag={this.props.storeAddDWordDisplay.tag}\r\n            />\r\n        )\r\n    }\r\n    getDWordDisplayEdit = () => {\r\n        if (this.props.storeEditDWordDisplay.id !== \"\") {\r\n            return (\r\n                <DWordDisplayAdd\r\n                    width={this.props.storeEditDWordDisplay.width}\r\n                    fontSize={this.props.storeEditDWordDisplay.fontSize}\r\n                    top={this.props.storeEditDWordDisplay.top}\r\n                    left={this.props.storeEditDWordDisplay.left}\r\n                    text={this.props.storeEditDWordDisplay.text}\r\n                    tag={this.props.storeEditDWordDisplay.tag}\r\n                />\r\n            )\r\n        }\r\n    }\r\n    //INPUT\r\n    getInputWordAdjust = () => {\r\n        return (<InputWordAdjustClick\r\n            id={this.props.wordAdjustClick.id}\r\n            tag={this.props.wordAdjustClick.tag}\r\n            left={this.props.wordAdjustClick.left}\r\n            top={this.props.wordAdjustClick.top}\r\n            text={this.props.wordAdjustClick.text}\r\n            fontSize={this.props.wordAdjustClick.fontSize}\r\n            width={this.props.wordAdjustClick.width}\r\n        />)\r\n    }\r\n    render() {\r\n        // const { uid } = this.props;\r\n        // if (!uid) {\r\n        //     return <Redirect to='/signin' />\r\n        // }\r\n        var srcStatus = this.state.statusPLC === 'Connected' ? require('../../../images/Connected.png') : require('../../../images/Disconnect.png')\r\n        return (\r\n            <Row style={{ height: \"100%\" }}>\r\n                <Col style={{ overflow: \"auto\" }}>\r\n                    <div onClick={this.props.backgroundClick} className=\"tramtronbetong\" style={{ backgroundImage: `url(${img})`, position: 'relative' }}>\r\n                        <Tooltip title={this.props.parentScada} arrow>\r\n                            <img src={srcStatus} style={{ width: 50, height: 50 }} alt='ErrorImg' />\r\n                        </Tooltip>\r\n                        {/* parentScada */}\r\n                        {this.props.indexWordAdjustClick > 0 ? <InputWordAdjustClick /> : ''}\r\n                        {this.props.indexDWordAdjustClick > 0 ? <InputDWordAdjustClick /> : ''}\r\n                        {this.props.indexImageClick > 0 ? <ForceElement /> : ''}\r\n                        {this.getBitAdjust()}\r\n                        {this.getBitDisplay()}\r\n                        {this.getWordDisplay()}\r\n                        {this.getDWordDisplay()}\r\n                        {this.getWordAdjust()}\r\n                        {this.getDWordAdjust()}\r\n                        {this.getImage()}\r\n                        {this.getLabel()}\r\n                        {this.getLine()}\r\n                        {this.getPanel()}\r\n                        {this.getTextField()}\r\n                        {this.getTextFieldInput()}\r\n\r\n                        {this.props.addTextField === true ? this.getTextFieldAdd() : ''}\r\n                        {this.props.editTextField === true ? this.getTextFieldEdit() : ''}\r\n\r\n                        {this.props.addTextFieldInput === true ? this.getTextFieldInputAdd() : ''}\r\n                        {this.props.editTextFieldInput === true ? this.getTextFieldInputEdit() : ''}\r\n\r\n                        {this.props.addPanel === true ? this.getPanelAdd() : ''}\r\n                        {this.props.editPanel === true ? this.getPanelEdit() : ''}\r\n\r\n                        {this.props.addLine === true ? this.getLineAdd() : ''}\r\n\r\n                        {this.props.addImage === true ? this.getImageAdd() : ''}\r\n                        {this.props.editImage === true ? this.getImageAdd() : ''}\r\n\r\n                        {this.props.addLabel === true ? this.getLabelAdd() : ''}\r\n                        {this.props.editLabel === true ? this.getLabelEdit() : ''}\r\n\r\n                        {this.props.addWordDisplay === true ? this.getWordDisplayAdd() : ''}\r\n                        {this.props.editWordDisplay === true ? this.getWordDisplayEdit() : ''}\r\n\r\n                        {this.props.addDWordDisplay === true ? this.getDWordDisplayAdd() : ''}\r\n                        {this.props.editDWordDisplay === true ? this.getDWordDisplayEdit() : ''}\r\n\r\n                        {this.props.addWordAdjust === true ? this.getWordAdjustAdd() : ''}\r\n                        {this.props.editWordAdjust === true ? this.getWordAdjustEdit() : ''}\r\n\r\n                        {this.props.addBitAdjust === true ? this.getBitAdjustAdd() : ''}\r\n                        {this.props.editBitAdjust === true ? this.getBitAdjustEdit() : ''}\r\n\r\n                        {this.props.addBitDisplay === true ? this.getBitDisplayAdd() : ''}\r\n                        {this.props.editBitDisplay === true ? this.getBitDisplayEdit() : ''}\r\n\r\n                        {this.props.addDWordAdjust === true ? this.getDWordAdjustAdd() : ''}\r\n                        {this.props.editDWordAdjust === true ? this.getDWordAdjustEdit() : ''}\r\n                    </div>\r\n                </Col >\r\n                {this.props.addTextField === true ? <TextFieldFormAdd /> : ''}\r\n                {this.props.editTextField === true ? <TextFieldFormEdit dataFirebaseTextField={this.state.dataFirebaseTextField} /> : ''}\r\n                {this.props.addTextFieldInput === true ? <TextFieldInputFormAdd /> : ''}\r\n                {this.props.editTextFieldInput === true ? <TextFieldInputFormEdit dataFirebaseTextFieldInput={this.state.dataFirebaseTextFieldInput} /> : ''}\r\n                {this.props.addPanel === true ? <PanelFormAdd /> : ''}\r\n                {this.props.editPanel === true ? <PanelFormEdit dataFirebasePanel={this.state.dataFirebasePanel} /> : ''}\r\n                {this.props.addImage === true ? <ImageFormAdd /> : ''}\r\n                {this.props.editImage === true ? <ImageFormEdit dataFirebaseImage={this.state.dataFirebaseImage} /> : ''}\r\n                {this.props.addLabel === true ? <LabelFormAdd /> : ''}\r\n                {this.props.editLabel === true ? <LabelFormEdit dataFirebaseLabel={this.state.dataFirebaseLabel} /> : ''}\r\n                {this.props.addLine === true ? <LineFormAdd /> : ''}\r\n                {this.props.editLine === true ? <LineFormEdit dataFirebaseLine={this.state.dataFirebaseLine} /> : ''}\r\n                {this.props.addWordDisplay === true ? <WordDisplayFormAdd /> : ''}\r\n                {this.props.editWordDisplay === true ? <WordDisplayFormEdit dataFirebaseWordDisplay={this.state.dataFirebaseWordDisplay} /> : ''}\r\n                {this.props.addWordAdjust === true ? <WordAdjustFormAdd /> : ''}\r\n                {this.props.editWordAdjust === true ? <WordAdjustFormEdit dataFirebaseWordAdjust={this.state.dataFirebaseWordAdjust} /> : ''}\r\n                {this.props.addDWordDisplay === true ? <DWordDisplayFormAdd /> : ''}\r\n                {this.props.editDWordDisplay === true ? <DWordDisplayFormEdit dataFirebaseDWordDisplay={this.state.dataFirebaseDWordDisplay} /> : ''}\r\n                {this.props.addDWordAdjust === true ? <DWordAdjustFormAdd /> : ''}\r\n                {this.props.editDWordAdjust === true ? <DWordAdjustFormEdit dataFirebaseDWordAdjust={this.state.dataFirebaseDWordAdjust} /> : ''}\r\n                {this.props.addBitAdjust === true ? <BitAdjustFormAdd /> : ''}\r\n                {this.props.editBitAdjust === true ? <BitAdjustFormEdit dataFirebaseBitAdjust={this.state.dataFirebaseBitAdjust} /> : ''}\r\n                {this.props.addBitDisplay === true ? <BitDisplayFormAdd /> : ''}\r\n                {this.props.editBitDisplay === true ? <BitDisplayFormEdit dataFirebaseBitDisplay={this.state.dataFirebaseBitDisplay} /> : ''}\r\n            </Row>\r\n        )\r\n    };\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    parentScada: state.element.parentScada,\r\n    addTextField: state.auth.addTextField,\r\n    editTextField: state.auth.editTextField,\r\n    addTextFieldInput: state.auth.addTextFieldInput,\r\n    editTextFieldInput: state.auth.editTextFieldInput,\r\n    addPanel: state.auth.addPanel,\r\n    editPanel: state.auth.editPanel,\r\n    addImage: state.auth.addImage,\r\n    editImage: state.auth.editImage,\r\n    addLabel: state.auth.addLabel,\r\n    editLabel: state.auth.editLabel,\r\n    addLine: state.auth.addLine,\r\n    editLine: state.auth.editLine,\r\n    addWordDisplay: state.auth.addWordDisplay,\r\n    editWordDisplay: state.auth.editWordDisplay,\r\n    addDWordDisplay: state.auth.addDWordDisplay,\r\n    editDWordDisplay: state.auth.editDWordDisplay,\r\n    addWordAdjust: state.auth.addWordAdjust,\r\n    editWordAdjust: state.auth.editWordAdjust,\r\n    addDWordAdjust: state.auth.addDWordAdjust,\r\n    editDWordAdjust: state.auth.editDWordAdjust,\r\n    addBitAdjust: state.auth.addBitAdjust,\r\n    editBitAdjust: state.auth.editBitAdjust,\r\n    addBitDisplay: state.auth.addBitDisplay,\r\n    editBitDisplay: state.auth.editBitDisplay,\r\n    indexImageClick: state.background.indexImageClick,\r\n    indexWordAdjustClick: state.background.indexWordAdjustClick,\r\n    indexDWordAdjustClick: state.background.indexDWordAdjustClick,\r\n    storeAddLine: state.line.addLine,\r\n    storeAddImage: state.image.addImage,\r\n    storeAddLabel: state.label.addLabel,\r\n    storeAddWordDisplay: state.wordDisplay.addWordDisplay,\r\n    storeAddWordAdjust: state.wordAdjust.addWordAdjust,\r\n    storeAddDWordDisplay: state.dwordDisplay.addDWordDisplay,\r\n    storeAddDWordAdjust: state.dwordAdjust.addDWordAdjust,\r\n    storeAddBitDisplay: state.bitDisplay.addBitDisplay,\r\n    storeAddBitAdjust: state.bitAdjust.addBitAdjust,\r\n\r\n    storeEditImage: state.image.editImage,\r\n    storeEditLabel: state.label.editLabel,\r\n    storeEditWordDisplay: state.wordDisplay.editWordDisplay,\r\n    storeEditWordAdjust: state.wordAdjust.editWordAdjust,\r\n    storeEditDWordDisplay: state.dwordDisplay.editDWordDisplay,\r\n    storeEditDWordAdjust: state.dwordAdjust.editDWordAdjust,\r\n    storeEditBitDisplay: state.bitDisplay.editBitDisplay,\r\n    storeEditBitAdjust: state.bitAdjust.editBitAdjust,\r\n    uid: state.firebase.auth.uid,\r\n    storeAddPanel: state.panel.addPanel,\r\n    storeEditPanel: state.panel.editPanel,\r\n    storeAddTextField: state.textField.addTextField,\r\n    storeEditTextField: state.textField.editTextField,\r\n    storeAddTextFieldInput: state.textFieldInput.addTextField,\r\n    storeEditTextFieldInput: state.textFieldInput.editTextField,\r\n})\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        backgroundClick: () => {\r\n            dispatch(backgroundClick())\r\n        },\r\n        actionSetParentScada: (item) => {\r\n            dispatch(actionSetParentScada(item))\r\n        },\r\n        actionGetPermission: (item) => {\r\n            dispatch(actionGetPermission(item))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConcreteMixing);","import CSC_R from '../../../images/CSC_R.gif'\r\nimport CSC_S from '../../../images/CSC_S.gif'\r\nimport SG1_R from '../../../images/SG1_R.gif'\r\nimport SG1_S from '../../../images/SG1_S.gif'\r\nimport MIX1_R from '../../../images/MIX1_R.gif'\r\nimport MIX1_S from '../../../images/MIX1_S.gif'\r\nimport SGMIX_R from '../../../images/SGMIX_R.gif'\r\nimport SGMIX_S from '../../../images/SGMIX_S.gif'\r\nimport CR1_R from '../../../images/CR1_R.gif'\r\nimport CR1_S from '../../../images/CR1_S.gif'\r\nimport CC2_R from '../../../images/CC2_R.gif'\r\nimport CC2_S from '../../../images/CC2_S.gif'\r\nimport BE2_R from '../../../images/BE2_R.gif'\r\nimport BE2_S from '../../../images/BE2_S.gif'\r\nexport const arrImage  = [\r\n    {\r\n        src_R: CSC_R,\r\n        src_S: CSC_S,\r\n        name: 'CSC'\r\n    },\r\n    {\r\n        src_R: SG1_R,\r\n        src_S: SG1_S,\r\n        name: 'SG1'\r\n    },\r\n    {\r\n        src_R: MIX1_R,\r\n        src_S: MIX1_S,\r\n        name: 'MIX1'\r\n    },\r\n    {\r\n        src_R: SGMIX_R,\r\n        src_S: SGMIX_S,\r\n        name: 'SGMIX'\r\n    },\r\n    {\r\n        src_R: CR1_R,\r\n        src_S: CR1_S,\r\n        name: 'CR1'\r\n    },\r\n    {\r\n        src_R: CC2_R,\r\n        src_S: CC2_S,\r\n        name: 'CC2'\r\n    },\r\n    {\r\n        src_R: BE2_R,\r\n        src_S: BE2_S,\r\n        name: 'BE2'\r\n    }\r\n];\r\n  \r\n  export default arrImage"],"sourceRoot":""}